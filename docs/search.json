[{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV.html","id":"context","dir":"Articles","previous_headings":"","what":"Context","title":"Introduction to fastCNV","text":"fastCNV package detect putative Copy Number Variations (CNVs) single cell (scRNAseq) data Spatial Transcriptomics (ST) data. also plots computed CNVs. vignette learn run package single scRNAseq ST Seurat objects list Seurat objects.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV.html","id":"load-packages","dir":"Articles","previous_headings":"","what":"Load packages","title":"Introduction to fastCNV","text":"get example data used vignette, ’ll need install load fastCNVdata package.","code":"remotes::install_github(\"must-bioinfo/fastCNV\") remotes::install_github(\"must-bioinfo/fastCNVdata\") library(fastCNV) library(fastCNVdata)"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV.html","id":"load-the-example-data","dir":"Articles","previous_headings":"","what":"Load the example data","title":"Introduction to fastCNV","text":"fastCNV package works scRNAseq data ST data, demonstrate cases . , load scColon (scRNAseq data colorectal tumor) crcsample1, crcsample2, crcsample3 crcsample4 (spatial transcriptomics data colorectal tumors).","code":"utils::data(scColon) utils::data(crcsample1) utils::data(crcsample2) utils::data(crcsample3) utils::data(crcsample4)"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV.html","id":"check-annotation","dir":"Articles","previous_headings":"","what":"Check annotation","title":"Introduction to fastCNV","text":"can load separate annotation file dataset information available Seurat object. example, cell type annotations already present column \"annot\" metadata.","code":"# Import the annotation file corresponding to your sample. For 10X ST data you can annotate your spots with LoupeBrowser annotation_file <- read.csv(\"/path/to/your/annotations/for/crcsample1.csv\")  crcsample[[\"annot\"]] <- annotation_file$Annot unique(scColon[[\"annot\"]]) #>                                                       annot #> C113_N_1_1_0_c1_v2_id-AAACCTGTCAGTGTTG               normal #> C113_N_1_1_0_c1_v2_id-AAAGCAACACCCTATC                Fibro #> C113_N_1_1_0_c1_v2_id-AAATGCCGTCACTTCC                   NK #> C113_N_1_1_0_c1_v2_id-AACGTTGAGAGGGATA          PlasmaCells #> C113_N_1_1_0_c1_v2_id-AACTCTTGTCTCACCT         MyeloLineage #> C113_N_1_1_0_c1_v2_id-ACCCACTTCGAATGCT               Tcells #> C113_N_1_1_0_c1_v2_id-ACTGCTCAGACACTAA               Bcells #> C113_N_1_1_0_c1_v2_id-CGGAGTCTCACCAGGC         SmoothMuscle #> C113_N_1_1_0_c1_v2_id-CGGGTCATCTACCAGA           Mastocytes #> C113_N_1_1_0_c1_v2_id-GTTAAGCTCACAGTAC         EndoArteriel #> C113_T_1_1_0_c1_v2_id-AAACCTGAGATCGATA                 EpiT #> C113_T_1_1_0_c1_v2_id-ATCATGGGTCGTCTTC              DC6.pDC #> C113_T_1_1_0_c1_v2_id-CGATTGATCTGCGACG            Pericytes #> C113_T_1_1_1_c1_v2_id-AGCGGTCAGGCTCAGA Schwann.Entericglial unique(crcsample1[[\"annot\"]]) #>                                          annot #> AAACAAGTATCTCCCA-1        epithelium&submucosa #> AAACACCAATAACTGC-1                     exclude #> AAACATTTCCCGGATT-1                   submucosa #> AAACCCGAACGAAATC-1                       tumor #> AAACCTAAGCAGCCGG-1 tumor&stroma_IC med to high #> AAAGGCTACGGACCAT-1 stroma_fibroblastic_IC high #> AAAGTTGACTCCCGTA-1          non neo epithelium #> AAATAGGGTGCTATTG-1      IC aggregate_submucosa unique(crcsample2[[\"annot\"]]) #>                                          annot #> AAACAAGTATCTCCCA-1 tumor&stroma_IC med to high #> AAACAGCTTTCAGAAG-1                       tumor #> AAACAGGGTCTATATT-1 stroma_fibroblastic_IC high #> AAACCGTTCGTCCAGG-1  stroma_fibroblastic_IC med unique(crcsample3[[\"annot\"]]) #>                                                      annot #> AAACAGAGCGACTCCT-1                          lamina propria #> AAACCGGGTAGGTACC-1 connective tissue_3_fibroblastic_IC med #> AAACCGTTCGTCCAGG-1 connective tissue_2_fibroblastic_IC low #> AAACCTCATGAAGTTG-1        connective tissue_6_hemosiderin? #> AAACGAGACGGTTGAT-1                  IC aggregate_submucosa #> AAACTGCTGGCTCCAA-1               connective tissue_1_edema #> AAATAACCATACGGGA-1                  epithelium&lam propria #> AAATAGGGTGCTATTG-1                     squamous epithelium #> AAATGGCATGTCTTGT-1                                 exclude #> AACCTTTACGACGTCT-1                      non neo epithelium #> AACGTGCGAAAGTCTC-1   connective tissue_4_muscularis_IC low #> ACAAGGGCAGGCTCTG-1                        glandular tissue #> ACGTTAGATTTGCCCG-1          IC aggregate connective tissue unique(crcsample4[[\"annot\"]]) #>                                                 annot #> AAACAATCTACTAGCA-1        stroma_fibroblastic_IC high #> AAACAGAGCGACTCCT-1        tumor&stroma_IC med to high #> AAACGAAGAACATACC-1                              tumor #> AAAGGGCAGCTTGAAT-1         stroma desmoplastic_IC low #> AAAGTGTGATTTATCT-1                          submucosa #> AAAGTTGACTCCCGTA-1                 non neo epithelium #> AAATACCTATAAGCAT-1          muscularis_IC med to high #> AAATGTGGGTGCTCCT-1         stroma_fibroblastic_IC med #> AACAATTACTCTACGC-1                            exclude #> AACTCTCAATAGAGCG-1               epithelium&submucosa #> AAGACTAACCCGTTGT-1 stroma desmoplastic_IC med to high #> AAGCTAGATCGAGTAA-1             IC aggregate_submucosa #> ACCGATGGTAGCATCG-1  IC aggregate_stroma or muscularis"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV.html","id":"run-fastcnv","dir":"Articles","previous_headings":"","what":"Run fastCNV","title":"Introduction to fastCNV","text":"step, fastCNV() use: prepareCountsForCNVAnalysis : runs Seurat standard clustering algorithm aggregates observations (cells spots) metaspots number counts defined aggregFactor (default 30,000). addition, observations can aggregated seurat cluster cell type combined leaving default aggregateByVar = TRUE specifying parameter referenceVar. Seurat object previously clustered, clustering re-done sctransformed (SCT) data using 10 PCs default parameters FindNeighbors FindClusters. can skipped setting reClusterSeurat = FALSE. CNVanalysis : computes CNV. annotations Seurat object, can add parameters referenceVar referenceLabel CNVcalling, crcsample1 example. given list Seurat objects, also output PDF file containing CNV heatmaps per category accross samples. can turn setting doRecapPlot = FALSE. plotCNVResults : visualize results (stored assays slot Seurat data). default, parameter downsizePlot set FALSE, builds detailed plot, takes important time render. desired, can set parameter TRUE, decreases rendering time plotting results meta-cell level instead cell-level, thus decreasing definition CNV results plotted. function also build PDF file sample containing corresponding CNV heatmap current working directory, can changed using savePath parameter. CNVfractionPerChromosome : compute CNV fraction per chromosome arm. part fastCNV() can skipped turning getCNVFractionPerChromosome FALSE. first going run fastCNV() scColon object, taking reference cells labeled Bcells, DC6.pDC,EndoArteriel, Fibro, Mastocytes, MyeloLineage, NK, Pericytes, PlasmaCells, Schwann.Entericglial, SmoothMuscle Tcells.  now run fastCNV()crcsample1 object decide take epithelium&submucosa, submucosa non neo epithelium reference since non-tumor spots.  Last, going run fastCNV() function list Seurat objects. time, additional recap plot output PDF file, containing CNV heatmaps per category across samples, since one Seurat object/sample, can turn setting doRecapPlot = FALSE.","code":"scColon <- fastCNV(seuratObj = scColon, sampleName = \"scColon\", referenceVar =                      \"annot\", referenceLabel = c(\"Bcells\", \"DC6.pDC\", \"EndoArteriel\",                      \"Fibro\", \"Mastocytes\", \"MyeloLineage\", \"NK\", \"Pericytes\",                      \"PlasmaCells\", \"Schwann.Entericglial\", \"SmoothMuscle\",\"Tcells\")) #> [1] \"Aggregating counts matrix.\" #> [1] \"Running Seurat SCTransform and clustering. This could take some time.\" #> [1] \"Sample : scColon\" #> Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck #>  #> Number of nodes: 2840 #> Number of edges: 83853 #>  #> Running Louvain algorithm... #> Maximum modularity in 10 random starts: 0.8916 #> Number of communities: 15 #> Elapsed time: 0 seconds #> [1] \"Seurat SCTransform and clustering done for sample scColon.\" #> [1] \"Running CNVAnalysis\" #> [1] \"CNVAnalysis done!\" #> [1] \"Plotting CNV results. This step may take some time.\" crcsample1 <- fastCNV(crcsample1, sampleName = \"crcsample1\", referenceVar = \"annot\",                       referenceLabel = c(\"epithelium&submucosa\",\"submucosa\",\"non neo epithelium\")) #> [1] \"Aggregating counts matrix.\" #> [1] \"Running Seurat SCTransform and clustering. This could take some time.\" #> [1] \"Sample : crcsample1\" #> Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck #>  #> Number of nodes: 2203 #> Number of edges: 65483 #>  #> Running Louvain algorithm... #> Maximum modularity in 10 random starts: 0.8181 #> Number of communities: 10 #> Elapsed time: 0 seconds #> [1] \"Seurat SCTransform and clustering done for sample crcsample1.\" #> [1] \"Running CNVAnalysis\" #> [1] \"CNVAnalysis done!\" #> [1] \"Plotting CNV results. This step may take some time.\" seuratList <- c(crcsample2,crcsample3,crcsample4) sampleNames <- c(\"crcsample2\", \"crcsample3\", \"crcsample4\") names(seuratList) <- sampleNames referencelabels <- c(\"epithelium&submucosa\",\"submucosa\",\"non neo epithelium\",                      \"squamous epithelium\", \"epithelium&lam propria\", \"lamina propria\")  seuratList <- fastCNV(seuratList, sampleNames, referenceVar = \"annot\",                        referenceLabel = referencelabels) #> [1] \"Aggregating counts matrix.\" #> [1] \"Running Seurat SCTransform and clustering. This could take some time.\" #> [1] \"Sample : crcsample2\" #> Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck #>  #> Number of nodes: 2317 #> Number of edges: 69983 #>  #> Running Louvain algorithm... #> Maximum modularity in 10 random starts: 0.8131 #> Number of communities: 15 #> Elapsed time: 0 seconds #> [1] \"Seurat SCTransform and clustering done for sample crcsample2.\" #> [1] \"Running Seurat SCTransform and clustering. This could take some time.\" #> [1] \"Sample : crcsample3\" #> Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck #>  #> Number of nodes: 1656 #> Number of edges: 46705 #>  #> Running Louvain algorithm... #> Maximum modularity in 10 random starts: 0.8145 #> Number of communities: 12 #> Elapsed time: 0 seconds #> [1] \"Seurat SCTransform and clustering done for sample crcsample3.\" #> [1] \"Running Seurat SCTransform and clustering. This could take some time.\" #> [1] \"Sample : crcsample4\" #> Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck #>  #> Number of nodes: 1691 #> Number of edges: 48501 #>  #> Running Louvain algorithm... #> Maximum modularity in 10 random starts: 0.8099 #> Number of communities: 9 #> Elapsed time: 0 seconds #> [1] \"Seurat SCTransform and clustering done for sample crcsample4.\" #> [1] \"Running CNVAnalysis\" #> [1] \"Plotting the CNV recap heatmap per category accross samples. This could take some time.\" #> [1] \"CNVAnalysis done!\" #> [1] \"Plotting CNV results. This step may take some time.\""},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV.html","id":"cnv-fraction","dir":"Articles","previous_headings":"","what":"CNV fraction","title":"Introduction to fastCNV","text":"fastCNV also computes cnv_fraction observation Seurat object. can directly plotted using Seurat plotting functions, ’ll demonstrate:  , see clusters much higher CNV fractions others. can directly plot test :  course, can also plot cnv_fraction Spatial plotting functions Seurat, can see non-tumor areas well delimited:  can also plot CNV per chromosome arm plotting functions Seurat.  see example right part tumor CNV loss chromosome 11q, lower left part tumor . Meanwhile, opposite happens chromosome 6q, gain lower left part tumor.","code":"library(Seurat) scColon <- RunUMAP(scColon, dims = 1:10) FeaturePlot(scColon, features = \"cnv_fraction\", reduction = \"umap\", ) |   DimPlot(scColon, reduction = \"umap\", group.by =  \"annot\") library(ggplot2) ggplot(FetchData(scColon, vars = c(\"annot\", \"cnv_fraction\")),         aes(annot, cnv_fraction, fill = annot)) +   geom_boxplot() +   theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, color = \"black\")) library(patchwork) SpatialFeaturePlot(crcsample1, \"cnv_fraction\", pt.size.factor = 45) | SpatialPlot(crcsample1, group.by = \"annot\", pt.size.factor = 45) library(scales)  SpatialFeaturePlot(crcsample1, features = \"11q_CNV\", pt.size.factor = 45)  +   scale_fill_distiller(palette = \"RdBu\", direction = -1, limits = c(-1, 1),                         rescaler = function(x, to = c(0, 1), from = NULL) {                          rescale_mid(x, to = to, mid = 0)                        }) | SpatialFeaturePlot(crcsample1, features = \"6q_CNV\", pt.size.factor = 45) +   scale_fill_distiller(palette = \"RdBu\", direction = -1, limits = c(-1, 1),                         rescaler = function(x, to = c(0, 1), from = NULL) {                          rescale_mid(x, to = to, mid = 0)                        })"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV.html","id":"cnv-classification","dir":"Articles","previous_headings":"","what":"CNV classification","title":"Introduction to fastCNV","text":"Using CNV per chromosome arm CNVclassify() can get alterations per chromosome arm (gain, loss none). CNVclassify() takes arguments Seurat object containing metadata CNV per chromosome arm. calculates 3 peaks CNV, corresponding loss, gain alteration. Using 3 peaks, builds table cell/spot chromosome arm containing either “loss”, “gain” “no_alteration”.","code":"crcsample1 <- CNVclassification(crcsample1, tumorLabels = c(\"tumor\", \"tumor&stroma_IC med to high\"))  SpatialDimPlot(crcsample1, group.by = \"11p_CNV_classification\") +   scale_fill_manual(values = c(gain = \"red\", no_alteration = \"grey\", loss = \"blue\"))| SpatialDimPlot(crcsample1, group.by = \"13q_CNV_classification\") +   scale_fill_manual(values = c(gain = \"red\", no_alteration = \"grey\", loss = \"blue\"))"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV.html","id":"cnv-clusters","dir":"Articles","previous_headings":"","what":"CNV clusters","title":"Introduction to fastCNV","text":"addition CNV fraction, can obtain clusters based CNV matrix running CNVcluster(). runs standard Seurat clustering pipeline CNV scores per observation – uses first 10 PCs building neighborhood graph Louvain clustering find clusters. Results CNVcluster saved Seurat object \"cnv_clusters\" metadata variable, can plotted Seurat functions. demonstrate ST object, also works regular scRNAseq data.  can retrieve metadata plot directly. , relate cnv_clusters annotation variable annot.  find tumor tissue virtually always cnv_cluster 1, 2 3 ; meanwhile, normal labels tend cnv_cluster 0, 4, 5, 6 7 present CNV. Note can also use cnv_clusters label CNV heatmap, directly using parameter splitPlotOfVar plotCNVResults() function.","code":"scColon <- CNVcluster(scColon, resolution = 0.8) crcsample1 <- CNVcluster(crcsample1, resolution = 0.8) SpatialDimPlot(crcsample1, group.by = \"cnv_clusters\", pt.size.factor = 45) library(ggplot2) library(SeuratObject) ggplot(FetchData(crcsample1, vars = c(\"cnv_clusters\", \"annot\")), aes(annot, fill = cnv_clusters)) +   geom_bar(position = \"fill\") +   theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, color = \"black\")) plotCNVResults(scColon, referenceVar = \"annot\", splitPlotOnVar = \"cnv_clusters\") plotCNVResults(crcsample1, referenceVar = \"annot\", splitPlotOnVar = \"cnv_clusters\")"},{"path":"https://must-bioinfo.github.io/fastCNV/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gadea Cabrejas. Author, maintainer. Clarice Groeneveld. Contributor.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cabrejas G (2024). fastCNV: fastCNV. R package version 0.3.6.","code":"@Manual{,   title = {fastCNV: fastCNV},   author = {Gadea Cabrejas},   year = {2024},   note = {R package version 0.3.6}, }"},{"path":"https://must-bioinfo.github.io/fastCNV/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"fastCNV","text":"install fastCNV, run R:","code":"remotes::install_github(\"must-bioinfo/fastCNV\")"},{"path":"https://must-bioinfo.github.io/fastCNV/index.html","id":"capabilities","dir":"","previous_headings":"","what":"Capabilities","title":"fastCNV","text":"fastCNV can plot heatmap inferred CNVs: also calculates cnv_fraction, can plotted Seurat standard plotting functions:  cnv_fractions can also visualized spatially:  cnv_fractions can used obtain clonal clusters (cnv_clusters):","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"fastCNV","text":"extensive tutorial available get started .","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVPerChromosomeArm.html","id":null,"dir":"Reference","previous_headings":"","what":"CNVPerChromosomeArm Computes the CNV fraction of each spot/cell per chromosome arm, then stocks the results into the metadata — CNVPerChromosomeArm","title":"CNVPerChromosomeArm Computes the CNV fraction of each spot/cell per chromosome arm, then stocks the results into the metadata — CNVPerChromosomeArm","text":"CNVPerChromosomeArm Computes CNV fraction spot/cell per chromosome arm, stocks results metadata","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVPerChromosomeArm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CNVPerChromosomeArm Computes the CNV fraction of each spot/cell per chromosome arm, then stocks the results into the metadata — CNVPerChromosomeArm","text":"","code":"CNVPerChromosomeArm(seuratObject)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVPerChromosomeArm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CNVPerChromosomeArm Computes the CNV fraction of each spot/cell per chromosome arm, then stocks the results into the metadata — CNVPerChromosomeArm","text":"seuratObject output fastCNV()","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVPerChromosomeArm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CNVPerChromosomeArm Computes the CNV fraction of each spot/cell per chromosome arm, then stocks the results into the metadata — CNVPerChromosomeArm","text":"function returns seurat object CNV chromosome arm metadata","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVanalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"CNVanalysis Runs the CNV functions given a seurat object or a list of seurat objects — CNVanalysis","title":"CNVanalysis Runs the CNV functions given a seurat object or a list of seurat objects — CNVanalysis","text":"CNVanalysis Runs CNV functions given seurat object list seurat objects","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVanalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CNVanalysis Runs the CNV functions given a seurat object or a list of seurat objects — CNVanalysis","text":"","code":"CNVanalysis(   object,   referenceVar = NULL,   referenceLabel = NULL,   doRecapPlot = TRUE,   pooledReference = TRUE,   scaleOnReferenceLabel = TRUE,   assay = NULL,   thresholdPercentile = 0.01,   genes = getGenes(),   windowSize = 100,   windowStep = 20,   topNGenes = 7000 )"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVanalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CNVanalysis Runs the CNV functions given a seurat object or a list of seurat objects — CNVanalysis","text":"object Seurat object list seurat objects containing data analyze referenceVar variable name annotations Seurat metadata referenceLabel label given observations wanted reference (can type annotation) doRecapPlot Default TRUE. output CNV heatmaps annotation TRUE. pooledReference Default TRUE. build pooled reference across samples TRUE. scaleOnReferenceLabel want scale results depending normal observations assay Name assay run CNV . Takes results prepareCountsForCNVAnalysis default available thresholdPercentile quantiles take (0.01 take 0.01-0.99). Background noise appears higher numbers. genes List genes ensembl windowSize Size genomic windows windowStep Step genomic windows topNGenes Number top expressed genes keep","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVanalysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CNVanalysis Runs the CNV functions given a seurat object or a list of seurat objects — CNVanalysis","text":"function returns genomic scores per genomic window per seurat object. given list one seurat object, annotations, output heatmap per cell type given","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcalling.html","id":null,"dir":"Reference","previous_headings":"","what":"CNVcalling Runs a CNV analysis given a seurat object — CNVcalling","title":"CNVcalling Runs a CNV analysis given a seurat object — CNVcalling","text":"CNVcalling Runs CNV analysis given seurat object","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcalling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CNVcalling Runs a CNV analysis given a seurat object — CNVcalling","text":"","code":"CNVcalling(   seuratObj,   assay = NULL,   referenceVar = NULL,   referenceLabel = NULL,   scaleOnReferenceLabel = TRUE,   thresholdPercentile = 0.01,   genes = getGenes(),   windowSize = 100,   windowStep = 20,   topNGenes = 7000 )"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcalling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CNVcalling Runs a CNV analysis given a seurat object — CNVcalling","text":"seuratObj Seurat object containing data analyze assay Name assay run CNV . Takes results prepareCountsForCNVAnalysis default available referenceVar variable name annotations Seurat metadata referenceLabel label given observations wanted reference (can type annotation) scaleOnReferenceLabel want scale results depending reference observations thresholdPercentile quantiles take (0.01 take 0.01-0.99). Background noise appears higher numbers. genes List genes ensembl windowSize Size genomic windows windowStep Step genomic windows topNGenes Number top expressed genes keep","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcalling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CNVcalling Runs a CNV analysis given a seurat object — CNVcalling","text":"function returns genomic scores per genomic window","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcallingList.html","id":null,"dir":"Reference","previous_headings":"","what":"CNVcalling but for a list of seurat objects — CNVcallingList","title":"CNVcalling but for a list of seurat objects — CNVcallingList","text":"CNVcalling list seurat objects","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcallingList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CNVcalling but for a list of seurat objects — CNVcallingList","text":"","code":"CNVcallingList(   seuratList,   assay = NULL,   referenceVar = NULL,   referenceLabel = NULL,   scaleOnReferenceLabel = TRUE,   thresholdPercentile = 0.01,   genes = getGenes(),   windowSize = 100,   windowStep = 20,   topNGenes = 7000 )"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcallingList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CNVcalling but for a list of seurat objects — CNVcallingList","text":"seuratList List seurat objects assay Name assay run CNV . Takes results prepareCountsForCNVAnalysis default available referenceVar variable name annotations Seurat metadata referenceLabel label given observations wanted reference (can type annotation) scaleOnReferenceLabel want scale results depending reference observations thresholdPercentile quantiles take (0.01 take 0.01-0.99). Background noise appears higher numbers. genes List genes ensembl windowSize Size genomic windows windowStep Step genomic windows topNGenes Number top expressed genes","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcallingList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CNVcalling but for a list of seurat objects — CNVcallingList","text":"function returns list genomic scores per genomic window","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVclassification.html","id":null,"dir":"Reference","previous_headings":"","what":"CNVclassification — CNVclassification","title":"CNVclassification — CNVclassification","text":"CNVclassification","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVclassification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CNVclassification — CNVclassification","text":"","code":"CNVclassification(seuratObj, tumorLabels)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVclassification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CNVclassification — CNVclassification","text":"seuratObj seurat object containing results fastCNV tumorLabels list containing tumor labels","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVclassification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CNVclassification — CNVclassification","text":"seurat object containing classification (loss gain no_alteration) observation chromosome arm.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcluster.html","id":null,"dir":"Reference","previous_headings":"","what":"CNV Clustering within a Seurat Object — CNVcluster","title":"CNV Clustering within a Seurat Object — CNVcluster","text":"Performs clustering based Copy Number Variations (CNVs) calculated CNVcalling.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CNV Clustering within a Seurat Object — CNVcluster","text":"","code":"CNVcluster(seuratObj, nPCs = 10, resolution = 0.8, k.param = 20)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CNV Clustering within a Seurat Object — CNVcluster","text":"seuratObj Seurat object containing single-cell genomic data. nPCs number principal components use clustering. Default 10. resolution Resolution parameter clustering algorithm. Affects granularity resulting clusters. Default 0.8. k.param Number nearest neighbors use construction SNN graph. Default 20.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CNV Clustering within a Seurat Object — CNVcluster","text":"Seurat object CNV-based clusters added","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVtree.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Phylogenetic Tree from a Copy Number Variation (CNV) Matrix — CNVtree","title":"Construct a Phylogenetic Tree from a Copy Number Variation (CNV) Matrix — CNVtree","text":"function constructs phylogenetic tree based given copy number variation (CNV) matrix. adds baseline \"Normal\" profile root tree, shown final output. First, computes pairwise distances profiles using Euclidean distance, applies specified tree-building function (e.g., Neighbor-Joining) construct tree.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVtree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Phylogenetic Tree from a Copy Number Variation (CNV) Matrix — CNVtree","text":"","code":"CNVtree(cnv_matrix, tree_function = nj)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVtree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Phylogenetic Tree from a Copy Number Variation (CNV) Matrix — CNVtree","text":"cnv_matrix matrix representing copy number variation, rows correspond samples columns correspond genomic regions. value represents CNV given region sample. tree_function function construct phylogenetic tree distance matrix. default nj (Neighbor-Joining). functions (e.g., upgma, wpgma) can also used.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVtree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a Phylogenetic Tree from a Copy Number Variation (CNV) Matrix — CNVtree","text":"rooted phylogenetic tree (class phylo)","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVtree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a Phylogenetic Tree from a Copy Number Variation (CNV) Matrix — CNVtree","text":"","code":"# Example usage with Neighbor-Joining (default)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/annotateCNVtree.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate a Phylogenetic Tree with CNV Events — annotateCNVtree","title":"Annotate a Phylogenetic Tree with CNV Events — annotateCNVtree","text":"function annotates phylogenetic tree copy number variation (CNV) events. identifies significant CNV events provided matrix, links clones ancestral nodes, updates tree information.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/annotateCNVtree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate a Phylogenetic Tree with CNV Events — annotateCNVtree","text":"","code":"annotateCNVtree(tree, cnv_mat, cnv_thresh = 0.2)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/annotateCNVtree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate a Phylogenetic Tree with CNV Events — annotateCNVtree","text":"tree phylogenetic tree (class phylo) annotated. cnv_mat matrix copy number variation (CNV) values, samples rows regions columns. cnv_thresh numeric threshold filter significant CNV events. Default 0.2.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/annotateCNVtree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate a Phylogenetic Tree with CNV Events — annotateCNVtree","text":"data frame tree data, including annotations CNV events.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/annotateCNVtree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate a Phylogenetic Tree with CNV Events — annotateCNVtree","text":"","code":"cnv_matrix <- structure(c(0.2, 0.4, 0, 0, 0.1, 0, 0.1, 0.2, 0.2), dim = c(3L, 3L), dimnames = list(c(\"Clone 1\", \"Clone 2\", \"Clone 3\"), c(\"Region 1\",                                                           \"Region 2\", \"Region 3\"))) tree <- CNVtree(cnv_matrix) tree_data <- annotateCNVtree(tree, cnv_matrix) #> Error in str_remove(names(events), \"_CNV\"): could not find function \"str_remove\""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.density.html","id":null,"dir":"Reference","previous_headings":"","what":"cit.density — cit.density","title":"cit.density — cit.density","text":"cit.density","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cit.density — cit.density","text":"","code":"cit.density(x, doplot = FALSE, pc = 0.05, ...)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cit.density — cit.density","text":"x ... doplot ... pc ... ... ...","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.discretize.html","id":null,"dir":"Reference","previous_headings":"","what":"cit.discretize — cit.discretize","title":"cit.discretize — cit.discretize","text":"cit.discretize","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.discretize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cit.discretize — cit.discretize","text":"","code":"cit.discretize(x, lim, quant = FALSE, addlevels = FALSE)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.discretize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cit.discretize — cit.discretize","text":"x ... lim ... quant ... addlevels ...","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"cit.peaks — cit.peaks","title":"cit.peaks — cit.peaks","text":"cit.peaks","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cit.peaks — cit.peaks","text":"","code":"cit.peaks(   x,   percentHighestPeak = 0.2,   maxNbPeaks = NULL,   minDeltaBetweenPeaks = 0.03,   deltaApproach = 1,   doplot = FALSE,   bw = \"nrd0\",   ... )"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cit.peaks — cit.peaks","text":"x ... percentHighestPeak ... maxNbPeaks ... minDeltaBetweenPeaks ... deltaApproach ... doplot ... bw ... ... ...","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cit.peaks — cit.peaks","text":"...","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/classify_cnv.html","id":null,"dir":"Reference","previous_headings":"","what":"CNVclassify — classify_cnv","title":"CNVclassify — classify_cnv","text":"CNVclassify","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/classify_cnv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CNVclassify — classify_cnv","text":"","code":"classify_cnv(cnv_vector, peaks_info)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/classify_cnv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CNVclassify — classify_cnv","text":"cnv_vector Vector CNVs peaks_info peaks info","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/fastCNV-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fastCNV: fastCNV — fastCNV-package","title":"fastCNV: fastCNV — fastCNV-package","text":"package fast CNV seurat data","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/fastCNV-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fastCNV: fastCNV — fastCNV-package","text":"Maintainer: Gadea Cabrejas gadea.cabrejas-saiz@u-paris.fr contributors: Clarice Groeneveld clarice.groeneveld@inserm.fr [contributor]","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/fastCNV.html","id":null,"dir":"Reference","previous_headings":"","what":"fastCNV calls all of the internal functions needed to compute the putative CNV on a seurat object or a list of seurat objects — fastCNV","title":"fastCNV calls all of the internal functions needed to compute the putative CNV on a seurat object or a list of seurat objects — fastCNV","text":"fastCNV calls internal functions needed compute putative CNV seurat object list seurat objects","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/fastCNV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fastCNV calls all of the internal functions needed to compute the putative CNV on a seurat object or a list of seurat objects — fastCNV","text":"","code":"fastCNV(   seuratObj,   sampleName,   referenceVar = NULL,   referenceLabel = NULL,   splitPlotOnVar = referenceVar,   downsizePlot = FALSE,   doPlot = TRUE,   doRecapPlot = TRUE,   prepareCounts = TRUE,   pooledReference = TRUE,   assay = NULL,   getCNVPerChromosomeArm = TRUE,   savePath = \".\",   aggregFactor = 15000,   seuratClusterResolution = 0.8,   aggregateByVar = T,   reClusterSeurat = F,   scaleOnReferenceLabel = TRUE,   thresholdPercentile = 0.01,   genes = getGenes(),   windowSize = 100,   windowStep = 20,   topNGenes = 7000 )"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/fastCNV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fastCNV calls all of the internal functions needed to compute the putative CNV on a seurat object or a list of seurat objects — fastCNV","text":"seuratObj Seurat object list seurat objects sampleName Name sample list names corresponding samples seuratObj referenceVar variable name annotations Seurat metadata referenceLabel label given observations wanted reference (can type annotation) splitPlotOnVar name given meta.data slot split observations plotCNVResults step, different referenceVar. downsizePlot Subset observations speed plotting process (default = FALSE). doPlot TRUE plot heatmap samples (default = TRUE) doRecapPlot Default TRUE. output CNV heatmaps annotation TRUE. prepareCounts FALSE run prepareCountsForCNVAnalysis function. Default TRUE. pooledReference Default TRUE. build pooled reference across samples TRUE. assay Name assay run CNV . Takes results prepareCountsForCNVAnalysis default available getCNVPerChromosomeArm TRUE, save metadata CNV per chromosome arm savePath Default .. NULL heatmap saved pdf. aggregFactor number counts per spot desired (default 30 000). less 1000, run prepareCountsForCNVAnalysis function. seuratClusterResolution resolution wanted seurat clusters (default 0.8) aggregateByVar referenceVar given, whether use pool observations reClusterSeurat Whether re-cluster Seurat object given already seurat_clusters slot meta.data scaleOnReferenceLabel want scale results depending normal observations thresholdPercentile quantiles take (0.01 take 0.01-0.99). Background noise appears higher numbers. genes List genes (default genes ensembl version 111) windowSize Size genomic windows windowStep Step genomic windows topNGenes Number top expressed genes keep","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/fastCNV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fastCNV calls all of the internal functions needed to compute the putative CNV on a seurat object or a list of seurat objects — fastCNV","text":"function returns list seurat objects analysis creates heatmaps CNVs every object seuratObj saves pdf current working directory","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Genes data from ensemble version 111 — genes","title":"Genes data from ensemble version 111 — genes","text":"Data downloaded ensembl website version 111 Data containing ensembl gene id, HUGO nomenclature entrez gene id, location chromosome, biotype length gene (76 000 genes)","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genes data from ensemble version 111 — genes","text":"","code":"data(genes)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/genes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Genes data from ensemble version 111 — genes","text":"object class list.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/genes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Genes data from ensemble version 111 — genes","text":"https://www.ensembl.org/index.html","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/genes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Genes data from ensemble version 111 — genes","text":"","code":"data(genes) hgnc <- genes$hgnc_symbol entrez <- genes$entrezgene_id"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/getGenes.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads the gene information from the ensembl site — getGenes","title":"Downloads the gene information from the ensembl site — getGenes","text":"Downloads gene information ensembl site","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/getGenes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads the gene information from the ensembl site — getGenes","text":"","code":"getGenes(filters = NULL, cache = TRUE)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/getGenes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads the gene information from the ensembl site — getGenes","text":"filters Filters (one ) used query cache Whether use data cache download latest version","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/getGenes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads the gene information from the ensembl site — getGenes","text":"function returns list genes information related genes","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVResults.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to plot the CNV results into a heatmap — plotCNVResults","title":"A function to plot the CNV results into a heatmap — plotCNVResults","text":"function plot CNV results heatmap","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to plot the CNV results into a heatmap — plotCNVResults","text":"","code":"plotCNVResults(   seuratObj,   referenceVar = NULL,   splitPlotOnVar = referenceVar,   savePath = \".\",   downsizePlot = FALSE )"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to plot the CNV results into a heatmap — plotCNVResults","text":"seuratObj Seurat object containing data used get genomicScores. referenceVar variable name annotations Seurat metadata splitPlotOnVar variable name split heatmap rows. savePath Path save pdf heatmap. NULL, plot saved (default = .). downsizePlot Subset observations speed plotting process (default = FALSE).","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to plot the CNV results into a heatmap — plotCNVResults","text":"function builds heatmap saves .pdf file working directory","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVtree.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an Annotated Phylogenetic Tree with CNV Events — plotCNVtree","title":"Plot an Annotated Phylogenetic Tree with CNV Events — plotCNVtree","text":"function generates plot annotated phylogenetic tree using ggtree. displays tip labels, tip points, labels CNV events associated node.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVtree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an Annotated Phylogenetic Tree with CNV Events — plotCNVtree","text":"","code":"plotCNVtree(tree_data)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVtree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an Annotated Phylogenetic Tree with CNV Events — plotCNVtree","text":"tree_data data frame containing tree structure annotations, typically produced annotateCNVtree.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVtree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot an Annotated Phylogenetic Tree with CNV Events — plotCNVtree","text":"ggplot object representing annotated phylogenetic tree.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVtree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot an Annotated Phylogenetic Tree with CNV Events — plotCNVtree","text":"","code":"cnv_matrix <- structure(c(0.2, 0.4, 0, 0, 0.1, 0, 0.1, 0.2, 0.2), dim = c(3L, 3L), dimnames = list(c(\"Clone 1\", \"Clone 2\", \"Clone 3\"), c(\"Region 1\",                                                           \"Region 2\", \"Region 3\"))) tree <- CNVtree(cnv_matrix) tree_data <- annotateCNVtree(tree, cnv_matrix) #> Error in str_remove(names(events), \"_CNV\"): could not find function \"str_remove\" plotCNVtree(tree_data) #> Error: object 'tree_data' not found"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/prepareCountsForCNVAnalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to aggregate observations with the same cell types to get higher counts per observation. It will help to have higher counts to compute the CNV — prepareCountsForCNVAnalysis","title":"A function to aggregate observations with the same cell types to get higher counts per observation. It will help to have higher counts to compute the CNV — prepareCountsForCNVAnalysis","text":"function aggregate observations cell types get higher counts per observation. help higher counts compute CNV","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/prepareCountsForCNVAnalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to aggregate observations with the same cell types to get higher counts per observation. It will help to have higher counts to compute the CNV — prepareCountsForCNVAnalysis","text":"","code":"prepareCountsForCNVAnalysis(   seuratObj,   sampleName = NULL,   referenceVar = NULL,   aggregateByVar = T,   aggregFactor = 15000,   seuratClusterResolution = 0.8,   reClusterSeurat = F )"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/prepareCountsForCNVAnalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to aggregate observations with the same cell types to get higher counts per observation. It will help to have higher counts to compute the CNV — prepareCountsForCNVAnalysis","text":"seuratObj Seurat object containing data sampleName Name sample referenceVar variable name annotations Seurat metadata aggregateByVar referenceVar given, whether use aggregate observations depending type. Default TRUE. aggregFactor number counts per observation desired (default 30 000) seuratClusterResolution resolution wanted seurat clusters (default 0.8) reClusterSeurat TRUE, clustering re-done Seurat object.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/prepareCountsForCNVAnalysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to aggregate observations with the same cell types to get higher counts per observation. It will help to have higher counts to compute the CNV — prepareCountsForCNVAnalysis","text":"function returns Seurat object modified count matrix new assay called AgregatedCounts Seurat clusters metadata","code":""}]
