[{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_HD.html","id":"context","dir":"Articles","previous_headings":"","what":"Context","title":"Introduction to fastCNV - Visium HD data","text":"fastCNV package detect putative Copy Number Variations (CNVs) single cell (scRNAseq) data Spatial Transcriptomics (ST) data. also plots computed CNVs. vignette learn run package Visium HD seurat object. fastCNV runs Seurat5. Warning : Visium HD samples RAM demanding session may crash enough RAM available. recommend running vignette server.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_HD.html","id":"load-packages","dir":"Articles","previous_headings":"","what":"Load packages","title":"Introduction to fastCNV - Visium HD data","text":"get example data used vignette, ’ll need install load fastCNVdata package.","code":"remotes::install_github(\"must-bioinfo/fastCNV\") remotes::install_github(\"must-bioinfo/fastCNVdata\") library(fastCNV) library(fastCNVdata) library(Seurat)"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_HD.html","id":"load-the-data","dir":"Articles","previous_headings":"","what":"Load the data","title":"Introduction to fastCNV - Visium HD data","text":"Load Visium HD data Seurat.","code":"HDBreast <- load_HDBreast()"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_HD.html","id":"check-annotation","dir":"Articles","previous_headings":"","what":"Check annotation","title":"Introduction to fastCNV - Visium HD data","text":"can load separate annotation file dataset. ’s usefull annotated spots analysis. can take look annotations present objects, order select labels cells used reference. fastCNV use default 16um assay, annotations done 8um resolution need run function running fastCNV 16um assay. Now 16um spots also annotations given 8um spots. projected annotations meta data “projected_annots_8um”. referenceVar use now . can check projected annotations correct ","code":"# Import the annotation file corresponding to your sample. For 10X ST data you can annotate your spots with LoupeBrowser annotation_file <- read.csv(\"/path/to/your/annotations/for/VisiumHD.csv\")  HDBreast[[\"annots_8um\"]] <- annotation_file$Annotations unique(HDBreast[[\"annots_8um\"]]) #>                       annots_8um #> s_016um_00107_00066-1            #> s_008um_00269_00526-1    NoTumor #> s_008um_00260_00253-1      Tumor HDBreast <- annotations_8um_to_16um(HDBreast, referenceVar = \"annots_8um\")  #> [1] \"New annotation column (new referenceVar) is named : projected_annots_8um.\" SpatialDimPlot(HDBreast, group.by = \"projected_annots_8um\")"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_HD.html","id":"run-fastcnv","dir":"Articles","previous_headings":"","what":"Run fastCNV","title":"Introduction to fastCNV - Visium HD data","text":"step, fastCNV_10XHD() use: CNVanalysis : computes CNV. annotations Seurat object, can add parameters referenceVar referenceLabel. CNVPerChromosome : compute CNV per chromosome arm, store metadata Seurat object. part fastCNV() can skipped turning getCNVPerChromosome FALSE. CNVcluster : OPTIONAL - performs hierarchical clustering genomic score matrix extracted Seurat object. may crash large Visium HD samples. function can run later . plotCNVResultsHD : visualize results (stored assays slot Seurat object). function also build PNG PDF file sample containing corresponding CNV heatmap current working directory, can changed using savePath parameter. going run fastCNV() Visium HD object. reference non-tumor spots, “NoTumor”. Warning : can RAM demanding.","code":"HDBreast <- fastCNV_10XHD(HDBreast, sampleName = \"HDBreast\", referenceVar = \"projected_annots_8um\", referenceLabel = \"NoTumor\", printPlot = TRUE)"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_HD.html","id":"cnv-fraction","dir":"Articles","previous_headings":"","what":"CNV fraction","title":"Introduction to fastCNV - Visium HD data","text":"fastCNV also computes cnv_fraction observation Seurat object. can directly plotted using Seurat spatial plotting functions, ’ll demonstrate STColon1:  , see zones higher CNV fractions others. can directly plot test :  tumor zone higher CNV fraction, coherent. can also plot CNV per chromosome arm plotting functions Seurat.","code":"library(patchwork) SpatialFeaturePlot(HDBreast, \"cnv_fraction\") | SpatialPlot(HDBreast, group.by = \"projected_annots_8um\") library(ggplot2) ggplot(FetchData(HDBreast, vars = c(\"projected_annots_8um\", \"cnv_fraction\")),         aes(projected_annots_8um, cnv_fraction, fill = projected_annots_8um)) +   geom_boxplot() +   theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, color = \"black\")) library(scales)  SpatialFeaturePlot(HDBreast, features = \"11.q_CNV\")  +   scale_fill_distiller(palette = \"RdBu\", direction = -1, limits = c(-1, 1),                         rescaler = function(x, to = c(0, 1), from = NULL) {                          rescale_mid(x, to = to, mid = 0)                        }) | SpatialFeaturePlot(HDBreast, features = \"8.q_CNV\") +   scale_fill_distiller(palette = \"RdBu\", direction = -1, limits = c(-1, 1),                         rescaler = function(x, to = c(0, 1), from = NULL) {                          rescale_mid(x, to = to, mid = 0)                        })"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_HD.html","id":"cnv-clusters","dir":"Articles","previous_headings":"","what":"CNV clusters","title":"Introduction to fastCNV - Visium HD data","text":"addition CNV fraction, fastCNV can also compute CNV clusters. can plotted Seurat plotting functions. CNVCluster can quite long Visium HD data. recommend using tumorLabel cluster malignant spots instead spots speed analysis. data mostly tumor cells, might usefull split object smaller objects clustering.  clusters, can CNV heatmap visualize clusters .","code":"HDBreast <- CNVcluster(HDBreast, referenceVar = \"projected_annots_8um\", tumorLabel = \"Tumor\")  SpatialDimPlot(HDBreast, group.by = \"cnv_clusters\") library(ggplot2) library(SeuratObject)  HDBreast$cnv_clusters <- as.factor(HDBreast$cnv_clusters) ggplot(FetchData(HDBreast, vars = c(\"cnv_clusters\", \"projected_annots_8um\")), aes(projected_annots_8um, fill = cnv_clusters)) +   geom_bar(position = \"fill\") +   theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, color = \"black\")) plotCNVResultsHD(HDBreast, referenceVar = \"projected_annots_8um\", printPlot = TRUE)"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_HD.html","id":"cnv-tree","dir":"Articles","previous_headings":"","what":"CNV tree","title":"Introduction to fastCNV - Visium HD data","text":"part vignette, show plot CNV subclonality tree. CNV clusters needed. First, build metacell cluster, using generateCNVClonesMatrix(). Now, build tree, using CNVtree(), annotateCNVtree() plotCNVtree(). CNVtree() build subclonality tree. annotateCNVtree() annotate cnv gain/loss tree. plotCNVtree() output tree.","code":"cnv_matrix_clusters <- generateCNVClonesMatrix(HDBreast, healthyClusters = \"0\") tree <- CNVtree(cnv_matrix_clusters) tree_data <- annotateCNVtree(tree, cnv_matrix_clusters, 0.13) plotCNVtree(tree_data)"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_sc.html","id":"context","dir":"Articles","previous_headings":"","what":"Context","title":"Introduction to fastCNV - scRNAseq data","text":"fastCNV package detect putative Copy Number Variations (CNVs) single cell (scRNAseq) data Spatial Transcriptomics (ST) data. also plots computed CNVs. vignette learn run package single scRNAseq seurat objects list scRNAseq Seurat objects. fastCNV runs Seurat5.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_sc.html","id":"load-packages","dir":"Articles","previous_headings":"","what":"Load packages","title":"Introduction to fastCNV - scRNAseq data","text":"get example data used vignette, ’ll need install load fastCNVdata package.","code":"remotes::install_github(\"must-bioinfo/fastCNV\") remotes::install_github(\"must-bioinfo/fastCNVdata\") library(fastCNV) library(fastCNVdata)"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_sc.html","id":"load-the-example-data","dir":"Articles","previous_headings":"","what":"Load the example data","title":"Introduction to fastCNV - scRNAseq data","text":"fastCNV package works scRNAseq data ST data, demonstrate scRNAseq , another vignette ST data. , load scColon1, scColon2, scColon3, scColon4 (scRNAseq data colorectal tumors Pelka et al. work).","code":"utils::data(scColon1) utils::data(scColon2) utils::data(scColon3) utils::data(scColon4)"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_sc.html","id":"check-annotation","dir":"Articles","previous_headings":"","what":"Check annotation","title":"Introduction to fastCNV - scRNAseq data","text":"can load separate annotation file dataset information available Seurat object. data used vignette, cell type annotations already present column \"annot\" metadata. can take look annotations present objects, order select labels cells used reference.","code":"# Import the annotation file corresponding to your sample.  annotation_file <- read.csv(\"/path/to/your/annotations/for/scColon1.csv\")  scColon1[[\"annot\"]] <- annotation_file$Annot unique(scColon1[[\"annot\"]]) unique(scColon2[[\"annot\"]]) unique(scColon3[[\"annot\"]]) unique(scColon4[[\"annot\"]])"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_sc.html","id":"run-fastcnv","dir":"Articles","previous_headings":"","what":"Run fastCNV","title":"Introduction to fastCNV - scRNAseq data","text":"step, fastCNV() use: prepareCountsForCNVAnalysis : runs Seurat standard clustering algorithm aggregates observations (cells spots) metaspots number counts defined aggregFactor (default 15,000). addition, observations can aggregated seurat cluster cell type combined leaving default aggregateByVar = TRUE specifying parameter referenceVar. Seurat object previously clustered, clustering re-done sctransformed (SCT) data using 10 PCs default parameters FindNeighbors FindClusters. can skipped setting reClusterSeurat = FALSE. CNVanalysis : computes CNV. annotations Seurat object, can add parameters referenceVar referenceLabel. CNVPerChromosome : compute CNV per chromosome arm, store metadata Seurat object. part fastCNV() can skipped turning getCNVPerChromosome FALSE. CNVcluster : performs hierarchical clustering genomic score matrix extracted Seurat object. plotCNVResults : visualize results (stored assays slot Seurat object). default, parameter downsizePlot set FALSE, builds detailed plot, takes important time render. desired, can set parameter TRUE, decreases rendering time plotting results meta-cell level instead cell-level, thus decreasing definition CNV results plotted. function also build PDF file sample containing corresponding CNV heatmap current working directory, can changed using savePath parameter. first going run fastCNV() scColon1 object, taking reference cells labeled TNKILC, Myeloid,B, Mast Plasma.  now going run fastCNV() function list Seurat objects. fastCNV() run list Seurat objects default parameters, builds pooled reference samples, particularly useful data containing healthy cells build reference.","code":"scColon1 <- fastCNV(seuratObj = scColon1, sampleName = \"scColon1\", referenceVar =                      \"annot\", referenceLabel = c(\"TNKILC\", \"Myeloid\", \"B\",                      \"Mast\", \"Plasma\"), printPlot = T) seuratList <- c(scColon2,scColon3,scColon4) sampleNames <- c(\"scColon2\", \"scColon3\", \"scColon4\") names(seuratList) <- sampleNames referencelabels <- c(\"Plasma\", \"TNKILC\", \"Myeloid\", \"B\", \"Mast\")  seuratList <- fastCNV(seuratList, sampleNames, referenceVar = \"annot\",                        referenceLabel = referencelabels, printPlot = T)"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_sc.html","id":"cnv-fraction","dir":"Articles","previous_headings":"","what":"CNV fraction","title":"Introduction to fastCNV - scRNAseq data","text":"fastCNV also computes cnv_fraction observation Seurat object. can directly plotted using Seurat plotting functions, ’ll demonstrate scColon1:  , see clusters much higher CNV fractions others. can directly plot test :  can also plot CNV per chromosome arm plotting functions Seurat.  , observe subset epithelial tumor cells exhibit CNV loss chromosome 20p, others . Additionally, cells show gain chromosome Xp, whereas others experience loss.","code":"library(Seurat) scColon1 <- RunUMAP(scColon1, dims = 1:10) library(ggplot2)  common_theme <- theme(   plot.title = element_text(size = 10),   legend.text = element_text(size = 8),   legend.title = element_text(size = 8),   axis.title = element_text(size = 8),   axis.text = element_text(size = 6) )  FeaturePlot(scColon1, features = \"cnv_fraction\", reduction = \"umap\" ) & common_theme |   DimPlot(scColon1, reduction = \"umap\", group.by =  \"annot\") & common_theme ggplot(FetchData(scColon1, vars = c(\"annot\", \"cnv_fraction\")),         aes(annot, cnv_fraction, fill = annot)) +   geom_boxplot() +   theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, color = \"black\")) library(scales)  FeaturePlot(scColon1, features = \"20.p_CNV\")  +   scale_color_distiller(palette = \"RdBu\", direction = -1, limits = c(-1, 1),                         rescaler = function(x, to = c(0, 1), from = NULL) {                          rescale_mid(x, to = to, mid = 0)                        }) +   common_theme | FeaturePlot(scColon1, features = \"X.q_CNV\") +   scale_color_distiller(palette = \"RdBu\", direction = -1, limits = c(-1, 1),                         rescaler = function(x, to = c(0, 1), from = NULL) {                          rescale_mid(x, to = to, mid = 0)                        }) +   common_theme"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_sc.html","id":"cnv-classification","dir":"Articles","previous_headings":"","what":"CNV classification","title":"Introduction to fastCNV - scRNAseq data","text":"Using CNV per chromosome arm CNVclassification() can get alterations per chromosome arm (gain, loss alteration).","code":"scColon1 <- CNVclassification(scColon1)  DimPlot(scColon1, group.by = \"20.p_CNV_classification\") &   scale_color_manual(values = c(gain = \"red\", no_alteration = \"grey\", loss = \"blue\")) &   common_theme | DimPlot(scColon1, group.by = \"X.q_CNV_classification\") &   scale_color_manual(values = c(gain = \"red\", no_alteration = \"grey\", loss = \"blue\")) &   common_theme"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_sc.html","id":"cnv-clusters","dir":"Articles","previous_headings":"","what":"CNV clusters","title":"Introduction to fastCNV - scRNAseq data","text":"addition CNV fraction, fastCNV also computes CNV clusters saves Seurat object metadata “cnv_clusters”. can plotted Seurat plotting functions.   find tumor cells virtually always cnv_cluster 2, 3, 4 5 ; meanwhile, healthy cells tend cnv_cluster 1 present CNV.","code":"DimPlot(scColon1, group.by = \"cnv_clusters\") + common_theme library(SeuratObject)  ggplot(FetchData(scColon1, vars = c(\"cnv_clusters\", \"annot\")), aes(annot, fill = cnv_clusters)) +   geom_bar(position = \"fill\") +   theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, color = \"black\"))"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_sc.html","id":"cnv-tree","dir":"Articles","previous_headings":"","what":"CNV tree","title":"Introduction to fastCNV - scRNAseq data","text":"can see, 4 tumor subclusters (2, 3, 4 5) scColon1, 1 healthy subcluster (1). part vignette, show plot CNV subclonality tree. First, build metacell cluster, using generateCNVClonesMatrix(). Now, build tree, using CNVtree(), annotateCNVtree() plotCNVtree(). CNVtree() build subclonality tree. annotateCNVtree() annotate CNV gain/loss tree. plotCNVtree() output tree.","code":"cnv_matrix_clusters <- generateCNVClonesMatrix(scColon1, healthyClusters = \"1\") tree <- CNVtree(cnv_matrix_clusters) tree_data <- annotateCNVtree(tree, cnv_matrix_clusters, 0.13) plotCNVtree(tree_data)"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_ST.html","id":"context","dir":"Articles","previous_headings":"","what":"Context","title":"Introduction to fastCNV - ST data","text":"fastCNV package detect putative Copy Number Variations (CNVs) single cell (scRNAseq) data Spatial Transcriptomics (ST) data. also plots computed CNVs. vignette learn run package single ST seurat objects list ST Seurat objects. fastCNV runs Seurat5.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_ST.html","id":"load-packages","dir":"Articles","previous_headings":"","what":"Load packages","title":"Introduction to fastCNV - ST data","text":"get example data used vignette, ’ll need install load fastCNVdata package.","code":"remotes::install_github(\"must-bioinfo/fastCNV\") remotes::install_github(\"must-bioinfo/fastCNVdata\") library(fastCNV) library(fastCNVdata)"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_ST.html","id":"load-the-example-data","dir":"Articles","previous_headings":"","what":"Load the example data","title":"Introduction to fastCNV - ST data","text":"fastCNV package works scRNAseq data ST data, demonstrate ST data , another vignette scRNAseq data. , load STColon1, STColon2, STColon3 STColon4 (spatial transcriptomics data colorectal tumors, Valdeolivas et al. work).","code":"utils::data(STColon1) utils::data(STColon2) utils::data(STColon3) utils::data(STColon4)"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_ST.html","id":"check-annotation","dir":"Articles","previous_headings":"","what":"Check annotation","title":"Introduction to fastCNV - ST data","text":"can load separate annotation file dataset information available Seurat object. example, cell type annotations already present column \"annot\" metadata. can take look annotations present objects, order select labels cells used reference.","code":"# Import the annotation file corresponding to your sample. For 10X ST data you can annotate your spots with LoupeBrowser annotation_file <- read.csv(\"/path/to/your/annotations/for/STColon1.csv\")  STColon1[[\"annot\"]] <- annotation_file$Annot unique(STColon1[[\"annot\"]]) unique(STColon2[[\"annot\"]]) unique(STColon3[[\"annot\"]]) unique(STColon4[[\"annot\"]])"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_ST.html","id":"run-fastcnv","dir":"Articles","previous_headings":"","what":"Run fastCNV","title":"Introduction to fastCNV - ST data","text":"step, fastCNV() use: prepareCountsForCNVAnalysis : runs Seurat standard clustering algorithm aggregates observations (cells spots) metaspots number counts defined aggregFactor (default 15,000). addition, observations can aggregated seurat cluster cell type combined leaving default aggregateByVar = TRUE specifying parameter referenceVar. Seurat object previously clustered, clustering re-done sctransformed (SCT) data using 10 PCs default parameters FindNeighbors FindClusters. can skipped setting reClusterSeurat = FALSE. CNVanalysis : computes CNV. annotations Seurat object, can add parameters referenceVar referenceLabel. CNVPerChromosome : compute CNV per chromosome arm, store metadata Seurat object. part fastCNV() can skipped turning getCNVPerChromosome FALSE. CNVcluster : performs hierarchical clustering genomic score matrix extracted Seurat object. plotCNVResults : visualize results (stored assays slot Seurat object). default, parameter downsizePlot set FALSE, builds detailed plot, takes important time render. desired, can set parameter TRUE, decreases rendering time plotting results meta-cell level instead cell-level, thus decreasing definition CNV results plotted. function also build PDF file sample containing corresponding CNV heatmap current working directory, can changed using savePath parameter. first going run fastCNV() STColon1 object , taking reference spots labeled epithelium&submucosa, submucosa non neo epithelium since non-tumor spots.  now going run fastCNV() function list Seurat objects. fastCNV() run list Seurat objects default parameters, builds pooled reference samples, particularly useful ST data containing healthy spots build reference.","code":"STColon1 <- fastCNV(STColon1, sampleName = \"STColon1\", referenceVar = \"annot\",                       referenceLabel = c(\"epithelium&submucosa\",\"submucosa\",\"non neo epithelium\"),                        printPlot = T) seuratList <- c(STColon2,STColon3,STColon4) sampleNames <- c(\"STColon2\", \"STColon3\", \"STColon4\") names(seuratList) <- sampleNames referencelabels <- c(\"epithelium&submucosa\", \"submucosa\", \"non neo epithelium\",                      \"squamous epithelium\", \"epithelium&lam propria\", \"lamina propria\")  seuratList <- fastCNV(seuratList, sampleNames, referenceVar = \"annot\",                        referenceLabel = referencelabels, printPlot = T)"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_ST.html","id":"cnv-fraction","dir":"Articles","previous_headings":"","what":"CNV fraction","title":"Introduction to fastCNV - ST data","text":"fastCNV also computes cnv_fraction observation Seurat object. can directly plotted using Seurat spatial plotting functions, ’ll demonstrate STColon1:  , see zones much higher CNV fractions others. can directly plot test :  can also plot CNV per chromosome arm plotting functions Seurat.","code":"library(Seurat) library(patchwork) SpatialFeaturePlot(STColon1, \"cnv_fraction\", pt.size.factor = 3) | SpatialPlot(STColon1, group.by = \"annot\", pt.size.factor = 3) library(ggplot2) ggplot(FetchData(STColon1, vars = c(\"annot\", \"cnv_fraction\")),         aes(annot, cnv_fraction, fill = annot)) +   geom_boxplot() +   theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, color = \"black\")) library(scales)  SpatialFeaturePlot(STColon1, features = \"11.q_CNV\", pt.size.factor = 3)  +   scale_fill_distiller(palette = \"RdBu\", direction = -1, limits = c(-1, 1),                         rescaler = function(x, to = c(0, 1), from = NULL) {                          rescale_mid(x, to = to, mid = 0)                        }) | SpatialFeaturePlot(STColon1, features = \"6.q_CNV\", pt.size.factor = 3) +   scale_fill_distiller(palette = \"RdBu\", direction = -1, limits = c(-1, 1),                         rescaler = function(x, to = c(0, 1), from = NULL) {                          rescale_mid(x, to = to, mid = 0)                        })"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_ST.html","id":"cnv-classification","dir":"Articles","previous_headings":"","what":"CNV classification","title":"Introduction to fastCNV - ST data","text":"Using CNV per chromosome arm CNVclassification() can get alterations per chromosome arm (gain, loss alteration).","code":"STColon1 <- CNVclassification(STColon1)  common_theme <- theme(   plot.title = element_text(size = 10),   legend.text = element_text(size = 8),   legend.title = element_text(size = 8),   axis.title = element_text(size = 8),   axis.text = element_text(size = 6) )   SpatialDimPlot(STColon1, group.by = \"11.p_CNV_classification\") +   scale_fill_manual(values = c(gain = \"red\", no_alteration = \"grey\", loss = \"blue\")) +   common_theme | SpatialDimPlot(STColon1, group.by = \"6.q_CNV_classification\") +   scale_fill_manual(values = c(gain = \"red\", no_alteration = \"grey\", loss = \"blue\")) +   common_theme"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_ST.html","id":"cnv-clusters","dir":"Articles","previous_headings":"","what":"CNV clusters","title":"Introduction to fastCNV - ST data","text":"addition CNV fraction, fastCNV also computes CNV clusters saves Seurat object metadata “cnv_clusters”. can plotted Seurat plotting functions.   find tumor cells virtually always cnv_cluster 2, 3, 4 5 ; meanwhile, healthy cells tend cnv_cluster 1 present CNV.","code":"SpatialDimPlot(STColon1, group.by = \"cnv_clusters\", pt.size.factor = 3) library(ggplot2) library(SeuratObject)  ggplot(FetchData(STColon1, vars = c(\"cnv_clusters\", \"annot\")), aes(annot, fill = cnv_clusters)) +   geom_bar(position = \"fill\") +   theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, color = \"black\"))"},{"path":"https://must-bioinfo.github.io/fastCNV/articles/fastCNV_ST.html","id":"cnv-tree","dir":"Articles","previous_headings":"","what":"CNV tree","title":"Introduction to fastCNV - ST data","text":"can see 4 tumor subclusters (2, 3, 4 5) STColon1, 1 healthy subcluster (1). part vignette, show plot CNV subclonality tree. First, build metacell cluster, using generateCNVClonesMatrix(). Now, build tree, using CNVtree(), annotateCNVtree() plotCNVtree(). CNVtree() build subclonality tree. annotateCNVtree() annotate cnv gain/loss tree. plotCNVtree() output tree.","code":"cnv_matrix_clusters <- generateCNVClonesMatrix(STColon1, healthyClusters = \"1\") tree <- CNVtree(cnv_matrix_clusters) tree_data <- annotateCNVtree(tree, cnv_matrix_clusters, 0.13) plotCNVtree(tree_data)"},{"path":"https://must-bioinfo.github.io/fastCNV/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gadea Cabrejas. Author, maintainer. Clarice Groeneveld. Author, contributor.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cabrejas G, Groeneveld C (2025). fastCNV: fastCNV. R package version 0.9.15, https://must-bioinfo.github.io/fastCNV.","code":"@Manual{,   title = {fastCNV: fastCNV},   author = {Gadea Cabrejas and Clarice Groeneveld},   year = {2025},   note = {R package version 0.9.15},   url = {https://must-bioinfo.github.io/fastCNV}, }"},{"path":"https://must-bioinfo.github.io/fastCNV/index.html","id":"introduction-","dir":"","previous_headings":"","what":"Introduction","title":"fastCNV","text":"fastCNV package helps detect, plot analyse putative Copy Number Variations (CNVs) single cell (scRNA-seq) data Spatial Transcriptomics (ST) data. Built SeuratObject, easily integrated scRNA-seq ST pipelines. WARNING: Project still construction function usage may change.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"fastCNV","text":"install fastCNV, run R:","code":"remotes::install_github(\"must-bioinfo/fastCNV\")"},{"path":"https://must-bioinfo.github.io/fastCNV/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"fastCNV","text":"Extensive tutorials run fastCNVon scRNA-seq spatial transcriptomics data available get started .","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/index.html","id":"capabilities","dir":"","previous_headings":"","what":"Capabilities","title":"fastCNV","text":"fastCNV can plot heatmap inferred CNVs:  also calculates cnv_fraction, can plotted Seurat standard plotting functions:  cnv_fractions can also visualized spatially Spatial Transcriptomics samples:  cnv_fractions can used obtain clonal clusters (cnv_clusters):  subclonality tree can plotted :","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/annotateCNVtree.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate a Phylogenetic Tree with CNV Events — annotateCNVtree","title":"Annotate a Phylogenetic Tree with CNV Events — annotateCNVtree","text":"function annotates phylogenetic tree copy number variation (CNV) events. identifies significant CNV events provided matrix, links clones ancestral nodes, updates tree information.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/annotateCNVtree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate a Phylogenetic Tree with CNV Events — annotateCNVtree","text":"","code":"annotateCNVtree(tree, cnv_mat, cnv_thresh = 0.15)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/annotateCNVtree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate a Phylogenetic Tree with CNV Events — annotateCNVtree","text":"tree phylogenetic tree (class phylo) annotated. cnv_mat matrix copy number variation (CNV) values, samples rows regions columns. cnv_thresh numeric threshold filter significant CNV events. Default 0.2.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/annotateCNVtree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate a Phylogenetic Tree with CNV Events — annotateCNVtree","text":"data frame tree data, including annotations CNV events.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/annotateCNVtree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate a Phylogenetic Tree with CNV Events — annotateCNVtree","text":"","code":"cnv_matrix <- structure(c(0.2, 0.4, 0, 0, 0.1, 0, 0.1, 0.2, 0.2), dim = c(3L, 3L), dimnames = list(c(\"Clone 1\", \"Clone 2\", \"Clone 3\"), c(\"Region 1\",                                                           \"Region 2\", \"Region 3\"))) tree <- CNVtree(cnv_matrix) tree_data <- annotateCNVtree(tree, cnv_matrix) #> Joining with `by = join_by(node, label)`"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/annotations_8um_to_16um.html","id":null,"dir":"Reference","previous_headings":"","what":"Project 8µm Spatial Annotation onto 16µm Spots — annotations_8um_to_16um","title":"Project 8µm Spatial Annotation onto 16µm Spots — annotations_8um_to_16um","text":"function projects annotations high-resolution (8µm) spatial assay onto lower-resolution (16µm) spatial assay finding nearest 8µm spot 16µm spot based spatial coordinates.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/annotations_8um_to_16um.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project 8µm Spatial Annotation onto 16µm Spots — annotations_8um_to_16um","text":"","code":"annotations_8um_to_16um(HDobj, referenceVar)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/annotations_8um_to_16um.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project 8µm Spatial Annotation onto 16µm Spots — annotations_8um_to_16um","text":"HDobj Seurat object containing 8µm 16µm spatial assays (named Spatial.008um Spatial.016um). referenceVar character string specifying name metadata column 8µm assay project (e.g., clustering annotation label).","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/annotations_8um_to_16um.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project 8µm Spatial Annotation onto 16µm Spots — annotations_8um_to_16um","text":"modified Seurat object new metadata column named projected_<referenceVar> containing projected annotation 16µm spots.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/annotations_8um_to_16um.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Project 8µm Spatial Annotation onto 16µm Spots — annotations_8um_to_16um","text":"function uses FNN::get.knnx() find nearest 8µm spot 16µm spot based tissue coordinates. assigns annotation closest 8µm spot 16µm spot. new annotation column added metadata HDobj.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.density.html","id":null,"dir":"Reference","previous_headings":"","what":"cit.density — cit.density","title":"cit.density — cit.density","text":"cit.density","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cit.density — cit.density","text":"","code":"cit.density(x, doplot = FALSE, pc = 0.05, ...)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cit.density — cit.density","text":"x ... doplot ... pc ... ... ...","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.discretize.html","id":null,"dir":"Reference","previous_headings":"","what":"cit.discretize — cit.discretize","title":"cit.discretize — cit.discretize","text":"cit.discretize","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.discretize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cit.discretize — cit.discretize","text":"","code":"cit.discretize(x, lim, quant = FALSE, addlevels = FALSE)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.discretize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cit.discretize — cit.discretize","text":"x ... lim ... quant ... addlevels ...","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"cit.peaks — cit.peaks","title":"cit.peaks — cit.peaks","text":"cit.peaks","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cit.peaks — cit.peaks","text":"","code":"cit.peaks(   x,   percentHighestPeak = 0.2,   maxNbPeaks = NULL,   minDeltaBetweenPeaks = 0.03,   deltaApproach = 1,   doplot = FALSE,   bw = \"nrd0\",   ... )"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cit.peaks — cit.peaks","text":"x ... percentHighestPeak ... maxNbPeaks ... minDeltaBetweenPeaks ... deltaApproach ... doplot ... bw ... ... ...","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/cit.peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cit.peaks — cit.peaks","text":"...","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/classify_cnv.html","id":null,"dir":"Reference","previous_headings":"","what":"CNV Classification for a Given Vector Classifies each CNV value in a vector as ","title":"CNV Classification for a Given Vector Classifies each CNV value in a vector as ","text":"CNV Classification Given Vector Classifies CNV value vector \"loss\", \"gain\", \"alteration\" based specified thresholds.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/classify_cnv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CNV Classification for a Given Vector Classifies each CNV value in a vector as ","text":"","code":"classify_cnv(cnv_vector, peaks)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/classify_cnv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CNV Classification for a Given Vector Classifies each CNV value in a vector as ","text":"cnv_vector numeric vector CNV scores given chromosome arm. peaks numeric vector containing thresholds classification. default c(-0.1, 0, 0.1): Loss: CNV values first threshold (peaks[1]). Gain: CNV values third threshold (peaks[3]). alteration: CNV values first third thresholds.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/classify_cnv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CNV Classification for a Given Vector Classifies each CNV value in a vector as ","text":"character vector classifications CNV value input vector, possible values \"loss\", \"gain\", \"no_alteration\".","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVanalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"CNVanalysis Runs Copy Number Variation (CNV) analysis on a Seurat object or a list of Seurat objects. — CNVanalysis","title":"CNVanalysis Runs Copy Number Variation (CNV) analysis on a Seurat object or a list of Seurat objects. — CNVanalysis","text":"function performs CNV analysis calculating genomic scores, applying optional denoising, optionally scaling results based reference population. processes single-cell spatial transcriptomics data, generating additional assay genomic scores adding new metadata column CNV fractions.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVanalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CNVanalysis Runs Copy Number Variation (CNV) analysis on a Seurat object or a list of Seurat objects. — CNVanalysis","text":"","code":"CNVanalysis(   object,   referenceVar = NULL,   referenceLabel = NULL,   pooledReference = TRUE,   scaleOnReferenceLabel = TRUE,   denoise = TRUE,   assay = NULL,   thresholdPercentile = 0.01,   geneMetadata = getGenes(),   windowSize = 150,   windowStep = 10,   saveGenomicWindows = FALSE,   topNGenes = 7000,   chrArmsToForce = NULL,   genesToForce = NULL,   regionToForce = NULL )"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVanalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CNVanalysis Runs Copy Number Variation (CNV) analysis on a Seurat object or a list of Seurat objects. — CNVanalysis","text":"object Seurat object list Seurat objects containing data CNV analysis. object can either single-cell spatial transcriptomics data. referenceVar name metadata column Seurat object contains reference annotations. referenceLabel label within referenceVar specifies reference population (can type annotation). pooledReference Logical. TRUE (default), builds pooled reference across samples. scaleOnReferenceLabel Logical. TRUE (default), scales results based reference population. denoise Logical. TRUE (default), applies denoising data. assay Name assay run CNV analysis . Defaults results prepareCountsForCNVAnalysis available. thresholdPercentile Numeric. Specifies quantile range consider (e.g., 0.01 keeps values 1st 99th percentiles). Higher values filter background noise. geneMetadata dataframe containing gene metadata, typically Ensembl. windowSize Integer. Defines size genomic windows CNV analysis. windowStep Integer. Specifies step size genomic windows. saveGenomicWindows Logical. TRUE, saves genomic window information current directory (default = FALSE). topNGenes Integer. number top-expressed genes retain analysis. chrArmsToForce chromosome arm (e.g., \"8p\", \"3q\") list chromosome arms (e.g., c(\"3q\", \"8p\", \"17p\")) force analysis. specified, genes within given chromosome arm(s) included. genesToForce list genes force analysis (e.g. c(\"FOXP3\",\"MUC16\",\"SAMD15\")). regionToForce Chromosome region force analysis (vector containing chr, start, end).","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVanalysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CNVanalysis Runs Copy Number Variation (CNV) analysis on a Seurat object or a list of Seurat objects. — CNVanalysis","text":"given single Seurat object, returns object : additional assay containing genomic scores per genomic window. new CNV fraction column added object’s metadata. given list Seurat objects, returns modified list.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcalling.html","id":null,"dir":"Reference","previous_headings":"","what":"CNVcalling Performs Copy Number Variation (CNV) analysis on a Seurat object. — CNVcalling","title":"CNVcalling Performs Copy Number Variation (CNV) analysis on a Seurat object. — CNVcalling","text":"CNVcalling Performs Copy Number Variation (CNV) analysis Seurat object.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcalling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CNVcalling Performs Copy Number Variation (CNV) analysis on a Seurat object. — CNVcalling","text":"","code":"CNVcalling(   seuratObj,   assay = NULL,   referenceVar = NULL,   referenceLabel = NULL,   scaleOnReferenceLabel = TRUE,   denoise = TRUE,   thresholdPercentile = 0.01,   geneMetadata = getGenes(),   windowSize = 150,   windowStep = 10,   saveGenomicWindows = FALSE,   topNGenes = 7000,   chrArmsToForce = NULL,   genesToForce = NULL,   regionToForce = NULL )"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcalling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CNVcalling Performs Copy Number Variation (CNV) analysis on a Seurat object. — CNVcalling","text":"seuratObj Seurat object containing data CNV analysis. Can either single-cell spatial transcriptomics data. assay Name assay run CNV analysis . Defaults results prepareCountsForCNVAnalysis available. referenceVar name metadata column Seurat object contains reference annotations. referenceLabel label within referenceVar specifies reference population (can type annotation). scaleOnReferenceLabel Logical. TRUE (default), scales results based reference population. denoise Logical. TRUE (default), applies denoising data. thresholdPercentile Numeric. Specifies quantile range consider (e.g., 0.01 keeps values 1st 99th percentiles). Higher values filter background noise. geneMetadata dataframe containing gene metadata, typically Ensembl. windowSize Integer. Defines size genomic windows CNV analysis. windowStep Integer. Specifies step size genomic windows. saveGenomicWindows Logical. TRUE, saves genomic window information current directory (default = FALSE). topNGenes Integer. number top-expressed genes retain analysis. chrArmsToForce chromosome arm (e.g., \"8p\", \"3q\") list chromosome arms (e.g., c(\"3q\", \"8p\", \"17p\")) force analysis. specified, genes within given chromosome arm(s) included. genesToForce list genes force analysis (e.g. c(\"FOXP3\",\"MUC16\",\"SAMD15\")). regionToForce Chromosome region force analysis (vector containing chr, start, end).","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcalling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CNVcalling Performs Copy Number Variation (CNV) analysis on a Seurat object. — CNVcalling","text":"Seurat object provided seuratObj, : additional assay containing genomic scores per genomic window. new CNV fraction column added object’s metadata.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcallingList.html","id":null,"dir":"Reference","previous_headings":"","what":"CNVcalling for a List of Seurat Objects Performs Copy Number Variation (CNV) analysis on a list of Seurat objects. — CNVcallingList","title":"CNVcalling for a List of Seurat Objects Performs Copy Number Variation (CNV) analysis on a list of Seurat objects. — CNVcallingList","text":"CNVcalling List Seurat Objects Performs Copy Number Variation (CNV) analysis list Seurat objects.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcallingList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CNVcalling for a List of Seurat Objects Performs Copy Number Variation (CNV) analysis on a list of Seurat objects. — CNVcallingList","text":"","code":"CNVcallingList(   seuratList,   assay = NULL,   referenceVar = NULL,   referenceLabel = NULL,   scaleOnReferenceLabel = TRUE,   denoise = TRUE,   thresholdPercentile = 0.01,   geneMetadata = getGenes(),   windowSize = 150,   windowStep = 10,   saveGenomicWindows = FALSE,   topNGenes = 7000,   chrArmsToForce = NULL,   genesToForce = NULL,   regionToForce = NULL )"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcallingList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CNVcalling for a List of Seurat Objects Performs Copy Number Variation (CNV) analysis on a list of Seurat objects. — CNVcallingList","text":"seuratList list Seurat objects containing data CNV analysis. object can either single-cell spatial transcriptomics data. assay Name assay run CNV analysis . Defaults results prepareCountsForCNVAnalysis available. referenceVar name metadata column Seurat object contains reference annotations. referenceLabel label within referenceVar specifies reference population (can type annotation). scaleOnReferenceLabel Logical. TRUE (default), scales results based reference population. denoise Logical. TRUE (default), applies denoising data. thresholdPercentile Numeric. Specifies quantile range consider (e.g., 0.01 keeps values 1st 99th percentiles). Higher values filter background noise. geneMetadata dataframe containing gene metadata, typically Ensembl. windowSize Integer. Defines size genomic windows CNV analysis. windowStep Integer. Specifies step size genomic windows. saveGenomicWindows Logical. TRUE, saves genomic window information current directory (default = FALSE). topNGenes Integer. number top-expressed genes retain analysis. chrArmsToForce chromosome arm (e.g., \"8p\", \"3q\") list chromosome arms (e.g., c(\"3q\", \"8p\", \"17p\")) force analysis. specified, genes within given chromosome arm(s) included. genesToForce list genes force analysis (e.g. c(\"FOXP3\",\"MUC16\",\"SAMD15\")). regionToForce Chromosome region force analysis (vector containing chr, start, end).","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcallingList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CNVcalling for a List of Seurat Objects Performs Copy Number Variation (CNV) analysis on a list of Seurat objects. — CNVcallingList","text":"list Seurat objects, : Contains additional assay genomic scores per genomic window. new CNV fraction column added metadata.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVclassification.html","id":null,"dir":"Reference","previous_headings":"","what":"CNV Classification Classifies the CNV results into loss, gain, or no alteration for each observation and chromosome arm. — CNVclassification","title":"CNV Classification Classifies the CNV results into loss, gain, or no alteration for each observation and chromosome arm. — CNVclassification","text":"CNV Classification Classifies CNV results loss, gain, alteration observation chromosome arm.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVclassification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CNV Classification Classifies the CNV results into loss, gain, or no alteration for each observation and chromosome arm. — CNVclassification","text":"","code":"CNVclassification(seuratObj, peaks = c(-0.1, 0, 0.1))"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVclassification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CNV Classification Classifies the CNV results into loss, gain, or no alteration for each observation and chromosome arm. — CNVclassification","text":"seuratObj Seurat object containing results CNV analysis (e.g., fastCNV). peaks numeric vector containing thresholds classifying CNVs. default c(-0.1, 0, 0.1), defines: Loss: CNV scores -0.1 alteration: CNV scores -0.1 0.1 Gain: CNV scores 0.1","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVclassification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CNV Classification Classifies the CNV results into loss, gain, or no alteration for each observation and chromosome arm. — CNVclassification","text":"Seurat object additional classification observation chromosome arm metadata. classification can one \"loss\", \"gain\", \"no_alteration\".","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform CNV Clustering with Seurat Object — CNVcluster","title":"Perform CNV Clustering with Seurat Object — CNVcluster","text":"CNVcluster function performs hierarchical clustering genomic score matrix extracted Seurat object. provides options plotting dendrogram, elbow plot optimal cluster determination, cluster visualization dendrogram. resulting cluster assignments stored Seurat object.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform CNV Clustering with Seurat Object — CNVcluster","text":"","code":"CNVcluster(   seuratObj,   referenceVar = NULL,   tumorLabel = NULL,   k = NULL,   h = NULL,   plotDendrogram = F,   plotClustersOnDendrogram = F,   plotElbowPlot = F )"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform CNV Clustering with Seurat Object — CNVcluster","text":"seuratObj Seurat object containing \"genomicScores\" assay matrix genomic scores clustering. referenceVar name metadata column Seurat object containing reference annotations. tumorLabel label within referenceVar specifies tumor/malignant population (can type annotation). k Optional. number clusters cut dendrogram . NULL, optimal number clusters determined automatically using elbow method. h Optional. height cut dendrogram clustering. k h provided, k takes precedence. plotDendrogram Logical. TRUE, plots dendrogram. Defaults FALSE. plotClustersOnDendrogram Logical. TRUE, highlights clusters dendrogram. Defaults FALSE. plotElbowPlot Logical. TRUE, plots elbow plot used determining optimal number clusters. Defaults FALSE.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform CNV Clustering with Seurat Object — CNVcluster","text":"Seurat object additional metadata column, cnv_clusters, containing cluster assignments.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVcluster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform CNV Clustering with Seurat Object — CNVcluster","text":"function computes Manhattan distance matrix performs hierarchical clustering using Ward.D2 method. k provided, elbow method applied determine optimal number clusters based within-cluster sum squares (WSS). clusters assigned Seurat object metadata column cnv_clusters.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVPerChromosomeArm.html","id":null,"dir":"Reference","previous_headings":"","what":"CNV Per Chromosome Arm Computes the CNV fraction of each spot/cell per chromosome arm, then stores the results into the metadata. — CNVPerChromosomeArm","title":"CNV Per Chromosome Arm Computes the CNV fraction of each spot/cell per chromosome arm, then stores the results into the metadata. — CNVPerChromosomeArm","text":"CNV Per Chromosome Arm Computes CNV fraction spot/cell per chromosome arm, stores results metadata.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVPerChromosomeArm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CNV Per Chromosome Arm Computes the CNV fraction of each spot/cell per chromosome arm, then stores the results into the metadata. — CNVPerChromosomeArm","text":"","code":"CNVPerChromosomeArm(seuratObj)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVPerChromosomeArm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CNV Per Chromosome Arm Computes the CNV fraction of each spot/cell per chromosome arm, then stores the results into the metadata. — CNVPerChromosomeArm","text":"seuratObj Seurat object, typically output fastCNV() function, containing genomic scores CNV analysis.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVPerChromosomeArm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CNV Per Chromosome Arm Computes the CNV fraction of each spot/cell per chromosome arm, then stores the results into the metadata. — CNVPerChromosomeArm","text":"function returns Seurat object CNV fraction chromosome arm added metadata.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVtree.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Phylogenetic Tree from a Copy Number Variation (CNV) Matrix — CNVtree","title":"Construct a Phylogenetic Tree from a Copy Number Variation (CNV) Matrix — CNVtree","text":"function constructs phylogenetic tree based given copy number variation (CNV) matrix. adds baseline \"Normal\" profile root tree, shown final output. First, computes pairwise distances profiles using Euclidean distance, applies specified tree-building function (e.g., Neighbor-Joining) construct tree.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVtree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Phylogenetic Tree from a Copy Number Variation (CNV) Matrix — CNVtree","text":"","code":"CNVtree(cnv_matrix, tree_function = nj)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVtree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Phylogenetic Tree from a Copy Number Variation (CNV) Matrix — CNVtree","text":"cnv_matrix matrix representing copy number variation, rows correspond samples columns correspond genomic regions. value represents CNV given region sample. tree_function function construct phylogenetic tree distance matrix. default nj (Neighbor-Joining). functions (e.g., upgma, wpgma) can also used.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVtree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a Phylogenetic Tree from a Copy Number Variation (CNV) Matrix — CNVtree","text":"rooted phylogenetic tree (class phylo)","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/CNVtree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a Phylogenetic Tree from a Copy Number Variation (CNV) Matrix — CNVtree","text":"","code":"# Example usage with Neighbor-Joining (default)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/compute_average_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute average expression for patients — compute_average_expression","title":"Compute average expression for patients — compute_average_expression","text":"function calculates average gene expression patient across different cell types. first retrieves patient data LN, extracts corresponding count data LrawcountsByPatient, calculates mean expression.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/compute_average_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute average expression for patients — compute_average_expression","text":"","code":"compute_average_expression(LN, LrawcountsByPatient)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/compute_average_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute average expression for patients — compute_average_expression","text":"LN list element represents cell type sublists containing patient data. LrawcountsByPatient named list element contains count data specific patient.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/compute_average_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute average expression for patients — compute_average_expression","text":"named vector containing average expression patient.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/fastCNV-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fastCNV: fastCNV — fastCNV-package","title":"fastCNV: fastCNV — fastCNV-package","text":"package performs fast CNV analysis Seurat data, providing tools detecting visualizing Copy Number Variations (CNVs) individual group levels. includes various functions CNV detection, clustering, visualization, data handling, specifically designed single-cell spatial transcriptomics datasets processed using Seurat.","code":""},{"path":[]},{"path":"https://must-bioinfo.github.io/fastCNV/reference/fastCNV-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fastCNV: fastCNV — fastCNV-package","text":"Maintainer: Gadea Cabrejas gadea.cabrejas-saiz@u-paris.fr Authors: Clarice Groeneveld clarice.groeneveld@inserm.fr [contributor]","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/fastCNV.html","id":null,"dir":"Reference","previous_headings":"","what":"fastCNV calls all of the internal functions needed to compute the putative CNV on a Seurat object or a list of Seurat objects — fastCNV","title":"fastCNV calls all of the internal functions needed to compute the putative CNV on a Seurat object or a list of Seurat objects — fastCNV","text":"function orchestrates CNV analysis Seurat object (multiple objects). calls internal functions prepareCountsForCNVAnalysis, CNVAnalysis, CNVPerChromosomeArm, CNVcluster, PlotCNVResults compute CNVs, perform clustering, generate heatmaps. results saved metadata Seurat object(s), options generating saving plots.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/fastCNV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fastCNV calls all of the internal functions needed to compute the putative CNV on a Seurat object or a list of Seurat objects — fastCNV","text":"","code":"fastCNV(   seuratObj,   sampleName,   referenceVar = NULL,   referenceLabel = NULL,   assay = NULL,   prepareCounts = TRUE,   aggregFactor = 15000,   seuratClusterResolution = 0.8,   aggregateByVar = TRUE,   reClusterSeurat = FALSE,   pooledReference = TRUE,   denoise = TRUE,   scaleOnReferenceLabel = TRUE,   thresholdPercentile = 0.01,   geneMetadata = getGenes(),   windowSize = 150,   windowStep = 10,   saveGenomicWindows = FALSE,   topNGenes = 7000,   chrArmsToForce = NULL,   genesToForce = NULL,   regionToForce = NULL,   getCNVPerChromosomeArm = TRUE,   getCNVClusters = TRUE,   tumorLabel = NULL,   k_clusters = NULL,   h_clusters = NULL,   plotDendrogram = FALSE,   plotClustersOnDendrogram = FALSE,   plotElbowPlot = FALSE,   doPlot = TRUE,   printPlot = FALSE,   savePath = \".\",   outputType = \"png\",   clustersVar = \"cnv_clusters\",   splitPlotOnVar = clustersVar,   referencePalette = \"default\",   clusters_palette = \"default\" )"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/fastCNV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fastCNV calls all of the internal functions needed to compute the putative CNV on a Seurat object or a list of Seurat objects — fastCNV","text":"seuratObj Seurat object list Seurat objects perform CNV analysis . sampleName Name sample list names corresponding samples seuratObj. referenceVar variable name annotations Seurat metadata used reference. referenceLabel label given observations want reference (can type annotation). assay Name assay run CNV . Takes results prepareCountsForCNVAnalysis default available. prepareCounts FALSE, run prepareCountsForCNVAnalysis function (default = TRUE). aggregFactor number counts per spot desired (default = 15 000). less 1,000, run prepareCountsForCNVAnalysis function. seuratClusterResolution resolution wanted Seurat clusters (default = 0.8). aggregateByVar referenceVar given, determines whether use pool observations (default = TRUE). reClusterSeurat Whether re-cluster Seurat object given already seurat_clusters slot metadata (default = FALSE). pooledReference Default TRUE. build pooled reference across samples TRUE. denoise TRUE, data denoised (default = TRUE). scaleOnReferenceLabel TRUE, scales results depending normal observations (default = TRUE). thresholdPercentile quantiles take (default 0.01). example, 0.01 take quantiles 0.01-0.99. Background noise appears higher numbers. geneMetadata List genes metadata (default uses genes Ensembl version 113). windowSize Size genomic windows CNV analysis (default = 150). windowStep Step genomic windows (default = 10). saveGenomicWindows TRUE, saves information genomic windows current directory (default = FALSE). topNGenes Number top expressed genes keep (default = 7000). chrArmsToForce chromosome arm (e.g., \"8p\", \"3q\") list chromosome arms (e.g., c(\"3q\", \"8p\", \"17p\")) force analysis. genesToForce list genes force analysis (e.g. c(\"FOXP3\",\"MUC16\",\"SAMD15\")). regionToForce Chromosome region force analysis (vector containing chr, start, end). getCNVPerChromosomeArm TRUE, save CNV per chromosome arm metadata. getCNVClusters TRUE, perform clustering CNV scores save metadata Seurat object cnv_clusters. tumorLabel label within referenceVar specifies tumor/malignant population (can type annotation). k_clusters Optional. Number clusters cut dendrogram . NULL, optimal number clusters determined automatically using elbow method. h_clusters Optional. height cut dendrogram clustering. k h provided, k takes precedence. plotDendrogram Logical. Whether plot dendrogram (default = FALSE). plotClustersOnDendrogram Logical. Whether highlight clusters dendrogram (default = FALSE). plotElbowPlot Logical. Whether plot elbow plot used determining optimal number clusters (default = FALSE). doPlot TRUE, build heatmap samples (default = TRUE). printPlot TRUE, heatmap printed console (default = FALSE, plot saved PDF). savePath Path save heatmap plot. NULL, plot saved (default = .). outputType Specifies file format saving plot, either \"png\" \"pdf\" (default = \"png\"). clustersVar variable name clusters Seurat metadata (default = \"cnv_clusters\"). splitPlotOnVar name metadata column split observations plotCNVResults step, different referenceVar. referencePalette color palette used referenceVar (default = \"default\"). clusters_palette color palette used clustersVar (default = \"default\").","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/fastCNV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fastCNV calls all of the internal functions needed to compute the putative CNV on a Seurat object or a list of Seurat objects — fastCNV","text":"list Seurat objects analysis complete. Heatmaps CNVs every object seuratObj generated saved specified path (default = current working directory).","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/fastCNV_10XHD.html","id":null,"dir":"Reference","previous_headings":"","what":"fastCNV_10XHD calls all of the internal functions needed to compute the putative CNV on a Seurat Visium HD object or a list of Seurat Visium HD objects — fastCNV_10XHD","title":"fastCNV_10XHD calls all of the internal functions needed to compute the putative CNV on a Seurat Visium HD object or a list of Seurat Visium HD objects — fastCNV_10XHD","text":"function orchestrates CNV analysis Seurat Visium HD object (multiple objects). calls internal functions CNVAnalysis PlotCNVResults compute CNVs generate heatmaps. results saved metadata Seurat object(s), options generating saving plots.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/fastCNV_10XHD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fastCNV_10XHD calls all of the internal functions needed to compute the putative CNV on a Seurat Visium HD object or a list of Seurat Visium HD objects — fastCNV_10XHD","text":"","code":"fastCNV_10XHD(   seuratObjHD,   sampleName,   referenceVar = NULL,   referenceLabel = NULL,   assay = \"Spatial.016um\",   pooledReference = TRUE,   denoise = TRUE,   scaleOnReferenceLabel = TRUE,   thresholdPercentile = 0.01,   geneMetadata = getGenes(),   windowSize = 150,   windowStep = 10,   saveGenomicWindows = FALSE,   topNGenes = 7000,   chrArmsToForce = NULL,   genesToForce = NULL,   regionToForce = NULL,   getCNVPerChromosomeArm = TRUE,   getCNVClusters = FALSE,   tumorLabel = NULL,   k_clusters = NULL,   h_clusters = NULL,   plotDendrogram = FALSE,   plotClustersOnDendrogram = FALSE,   plotElbowPlot = FALSE,   doPlot = TRUE,   printPlot = FALSE,   savePath = \".\",   outputType = \"png\",   clustersVar = \"cnv_clusters\",   splitPlotOnVar = clustersVar,   referencePalette = \"default\" )"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/fastCNV_10XHD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fastCNV_10XHD calls all of the internal functions needed to compute the putative CNV on a Seurat Visium HD object or a list of Seurat Visium HD objects — fastCNV_10XHD","text":"seuratObjHD Seurat object list Seurat objects perform CNV analysis . sampleName Name sample list names corresponding samples seuratObj. referenceVar variable name annotations Seurat metadata used reference. referenceLabel label given observations want reference (can type annotation). assay Name assay run CNV . Takes results prepareCountsForCNVAnalysis default available. pooledReference Default TRUE. build pooled reference across samples TRUE. denoise TRUE, data denoised (default = TRUE). scaleOnReferenceLabel TRUE, scales results depending normal observations (default = TRUE). thresholdPercentile quantiles take (default 0.01). example, 0.01 take quantiles 0.01-0.99. Background noise appears higher numbers. geneMetadata List genes metadata (default uses genes Ensembl version 113). windowSize Size genomic windows CNV analysis (default = 150). windowStep Step genomic windows (default = 10). saveGenomicWindows TRUE, saves information genomic windows current directory (default = FALSE). topNGenes Number top expressed genes keep (default = 7000). chrArmsToForce chromosome arm (e.g., \"8p\", \"3q\") list chromosome arms (e.g., c(\"3q\", \"8p\", \"17p\")) force analysis. genesToForce list genes force analysis (e.g. c(\"FOXP3\",\"MUC16\",\"SAMD15\")). regionToForce Chromosome region force analysis (vector containing chr, start, end). getCNVPerChromosomeArm TRUE, save CNV per chromosome arm metadata. getCNVClusters TRUE, perform clustering CNV scores save metadata Seurat object cnv_clusters. tumorLabel label within referenceVar specifies tumor/malignant population (can type annotation). k_clusters Optional. Number clusters cut dendrogram . NULL, optimal number clusters determined automatically using elbow method. h_clusters Optional. height cut dendrogram clustering. k h provided, k takes precedence. plotDendrogram Logical. Whether plot dendrogram (default = FALSE). plotClustersOnDendrogram Logical. Whether highlight clusters dendrogram (default = FALSE). plotElbowPlot Logical. Whether plot elbow plot used determining optimal number clusters (default = FALSE). doPlot TRUE, build heatmap samples (default = TRUE). printPlot TRUE, heatmap printed console (default = FALSE, plot saved PDF). savePath Path save heatmap plot. NULL, plot saved (default = .). outputType Specifies file format saving plot, either \"png\" \"pdf\" (default = \"png\"). clustersVar name metadata column containing cluster information (default = \"cnv_clusters\"). splitPlotOnVar name metadata column split observations plotCNVResults step, different referenceVar. referencePalette color palette referenceVar. can provide custom palette vector color codes (e.g., c(\"#FF0000\", \"#00FF00\")). clusters_palette color palette clustersVar. can provide custom palette vector color codes (e.g., c(\"#F8766D\", \"#A3A500\", \"#00BF7D\")).","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/fastCNV_10XHD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fastCNV_10XHD calls all of the internal functions needed to compute the putative CNV on a Seurat Visium HD object or a list of Seurat Visium HD objects — fastCNV_10XHD","text":"Seurat object list Seurat objects analysis complete. Heatmaps CNVs every object seuratObj generated saved specified path (default = current working directory).","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/geneMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Genes Data from Ensembl Version 113 — geneMetadata","title":"Genes Data from Ensembl Version 113 — geneMetadata","text":"Data downloaded Ensembl website (version 113), containing detailed gene information approximately 76,000 genes. dataset includes Ensembl gene IDs, HUGO nomenclature (HGNC symbol), Entrez gene IDs, chromosome locations, gene biotype, gene length gene.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/geneMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genes Data from Ensembl Version 113 — geneMetadata","text":"","code":"data(geneMetadata)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/geneMetadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Genes Data from Ensembl Version 113 — geneMetadata","text":"object class list, containing gene information described .","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/geneMetadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Genes Data from Ensembl Version 113 — geneMetadata","text":"Ensembl Genome Browser, Version 113: https://www.ensembl.org/index.html","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/geneMetadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Genes Data from Ensembl Version 113 — geneMetadata","text":"","code":"data(geneMetadata) hgnc <- geneMetadata$hgnc_symbol entrez <- geneMetadata$entrezgene_id"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/generateCNVClonesMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate CNV Matrix for CNV Clusters by Chromosome Arm — generateCNVClonesMatrix","title":"Generate CNV Matrix for CNV Clusters by Chromosome Arm — generateCNVClonesMatrix","text":"function generates matrix metacells metacell corresponds CNV cluster. CNV matrix calculated chromosome arm. specified, certain clusters labeled \"Benign\" rather \"Clone\".","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/generateCNVClonesMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate CNV Matrix for CNV Clusters by Chromosome Arm — generateCNVClonesMatrix","text":"","code":"generateCNVClonesMatrix(seuratObj, healthyClusters = NULL)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/generateCNVClonesMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate CNV Matrix for CNV Clusters by Chromosome Arm — generateCNVClonesMatrix","text":"seuratObj Seurat object containing CNV data metadata. healthyClusters numeric vector NULL. provided, clusters specified vector labeled \"Benign\" instead \"Clone\". Default NULL.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/generateCNVClonesMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate CNV Matrix for CNV Clusters by Chromosome Arm — generateCNVClonesMatrix","text":"matrix CNVs row names corresponding clone benign labels columns representing chromosome arms.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Genes data from ensemble version 111 — genes","title":"Genes data from ensemble version 111 — genes","text":"Data downloaded ensembl website version 111 Data containing ensembl gene id, HUGO nomenclature entrez gene id, location chromosome, biotype length gene (76 000 genes)","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genes data from ensemble version 111 — genes","text":"","code":"data(genes)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/genes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Genes data from ensemble version 111 — genes","text":"object class list.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/genes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Genes data from ensemble version 111 — genes","text":"https://www.ensembl.org/index.html","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/genes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Genes data from ensemble version 111 — genes","text":"","code":"data(genes) hgnc <- genes$hgnc_symbol entrez <- genes$entrezgene_id"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/getGenes.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Gene Information from Ensembl — getGenes","title":"Download Gene Information from Ensembl — getGenes","text":"function retrieves gene information Ensembl database using specified filters. can either fetch latest data use cached data available.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/getGenes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Gene Information from Ensembl — getGenes","text":"","code":"getGenes(filters = NULL, cache = TRUE)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/getGenes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Gene Information from Ensembl — getGenes","text":"filters character vector filters applied query. filters determine genes associated information returned Ensembl database. cache Logical. TRUE, function use cached data available. FALSE, download latest version gene data Ensembl.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/getGenes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Gene Information from Ensembl — getGenes","text":"list containing gene information retrieved Ensembl, element representing data specific gene (e.g., gene IDs, descriptions, associated attributes).","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot CNV Results into a Heatmap Builds a heatmap to visualize the CNV results based on genomic scores. — plotCNVResults","title":"Plot CNV Results into a Heatmap Builds a heatmap to visualize the CNV results based on genomic scores. — plotCNVResults","text":"Plot CNV Results Heatmap Builds heatmap visualize CNV results based genomic scores.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot CNV Results into a Heatmap Builds a heatmap to visualize the CNV results based on genomic scores. — plotCNVResults","text":"","code":"plotCNVResults(   seuratObj,   referenceVar = NULL,   clustersVar = \"cnv_clusters\",   splitPlotOnVar = clustersVar,   savePath = \".\",   printPlot = FALSE,   referencePalette = \"default\",   clusters_palette = \"default\",   outputType = \"png\" )"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot CNV Results into a Heatmap Builds a heatmap to visualize the CNV results based on genomic scores. — plotCNVResults","text":"seuratObj Seurat object containing genomic scores computed previously. referenceVar name metadata column Seurat object containing reference annotations. clustersVar name metadata column containing cluster information (default = \"cnv_clusters\"). splitPlotOnVar name metadata column used split heatmap rows (e.g., cell type cluster) (default = clustersVar). savePath path heatmap saved. NULL, plot saved (default = \".\"). printPlot Logical. TRUE, prints heatmap console. referencePalette color palette referenceVar. can provide custom palette vector color codes (e.g., c(\"#FF0000\", \"#00FF00\")). clusters_palette color palette clustersVar. can provide custom palette vector color codes (e.g., c(\"#F8766D\", \"#A3A500\", \"#00BF7D\")). outputType Character. Specifies file format saving plot, either \"png\" \"pdf\".","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot CNV Results into a Heatmap Builds a heatmap to visualize the CNV results based on genomic scores. — plotCNVResults","text":"function generates heatmap saves .pdf .png file specified path (default = working directory).","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVResultsHD.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Visium HD CNV Results into a Heatmap Builds a heatmap to visualize the Visium HD CNV results based on genomic scores. — plotCNVResultsHD","title":"Plot Visium HD CNV Results into a Heatmap Builds a heatmap to visualize the Visium HD CNV results based on genomic scores. — plotCNVResultsHD","text":"Plot Visium HD CNV Results Heatmap Builds heatmap visualize Visium HD CNV results based genomic scores.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVResultsHD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Visium HD CNV Results into a Heatmap Builds a heatmap to visualize the Visium HD CNV results based on genomic scores. — plotCNVResultsHD","text":"","code":"plotCNVResultsHD(   seuratObjHD,   referenceVar = NULL,   clustersVar = \"cnv_clusters\",   splitPlotOnVar = clustersVar,   savePath = \".\",   printPlot = FALSE,   referencePalette = \"default\",   clusters_palette = \"default\",   outputType = \"png\" )"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVResultsHD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Visium HD CNV Results into a Heatmap Builds a heatmap to visualize the Visium HD CNV results based on genomic scores. — plotCNVResultsHD","text":"seuratObjHD Seurat object containing genomic scores computed previously. referenceVar name metadata column Seurat object containing reference annotations. clustersVar name metadata column containing cluster information (default = \"cnv_clusters\"). splitPlotOnVar name metadata column used split heatmap rows (e.g., cell type cluster) (default = clustersVar). savePath path heatmap saved. NULL, plot saved (default = \".\"). printPlot Logical. TRUE, prints heatmap console. referencePalette color palette referenceVar. can provide custom palette vector color codes (e.g., c(\"#FF0000\", \"#00FF00\")). clusters_palette color palette clustersVar. can provide custom palette vector color codes (e.g., c(\"#F8766D\", \"#A3A500\", \"#00BF7D\")). outputType Character. Specifies file format saving plot, either \"png\" \"pdf\".","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVResultsHD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Visium HD CNV Results into a Heatmap Builds a heatmap to visualize the Visium HD CNV results based on genomic scores. — plotCNVResultsHD","text":"function generates heatmap saves .pdf .png file specified path (default = working directory).","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVtree.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an Annotated Phylogenetic Tree with CNV Events — plotCNVtree","title":"Plot an Annotated Phylogenetic Tree with CNV Events — plotCNVtree","text":"function generates plot annotated phylogenetic tree using ggtree. displays tip labels, tip points, labels CNV events associated node.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVtree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an Annotated Phylogenetic Tree with CNV Events — plotCNVtree","text":"","code":"plotCNVtree(tree_data)"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVtree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an Annotated Phylogenetic Tree with CNV Events — plotCNVtree","text":"tree_data data frame containing tree structure annotations, typically produced annotateCNVtree.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVtree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot an Annotated Phylogenetic Tree with CNV Events — plotCNVtree","text":"ggplot object representing annotated phylogenetic tree.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/plotCNVtree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot an Annotated Phylogenetic Tree with CNV Events — plotCNVtree","text":"","code":"cnv_matrix <- structure(c(0.2, 0.4, 0, 0, 0.1, 0, 0.1, 0.2, 0.2), dim = c(3L, 3L), dimnames = list(c(\"Clone 1\", \"Clone 2\", \"Clone 3\"), c(\"Region 1\",                                                           \"Region 2\", \"Region 3\"))) tree <- CNVtree(cnv_matrix) tree_data <- annotateCNVtree(tree, cnv_matrix) #> Joining with `by = join_by(node, label)` plotCNVtree(tree_data) #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_label()`)."},{"path":"https://must-bioinfo.github.io/fastCNV/reference/prepareCountsForCNVAnalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Observations by Cell Type for CNV Analysis Aggregates observations with the same cell types to increase counts per observation, improving Copy Number Variation (CNV) computation. — prepareCountsForCNVAnalysis","title":"Aggregate Observations by Cell Type for CNV Analysis Aggregates observations with the same cell types to increase counts per observation, improving Copy Number Variation (CNV) computation. — prepareCountsForCNVAnalysis","text":"Aggregate Observations Cell Type CNV Analysis Aggregates observations cell types increase counts per observation, improving Copy Number Variation (CNV) computation.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/prepareCountsForCNVAnalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Observations by Cell Type for CNV Analysis Aggregates observations with the same cell types to increase counts per observation, improving Copy Number Variation (CNV) computation. — prepareCountsForCNVAnalysis","text":"","code":"prepareCountsForCNVAnalysis(   seuratObj,   sampleName = NULL,   referenceVar = NULL,   aggregateByVar = T,   aggregFactor = 15000,   seuratClusterResolution = 0.8,   reClusterSeurat = F )"},{"path":"https://must-bioinfo.github.io/fastCNV/reference/prepareCountsForCNVAnalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Observations by Cell Type for CNV Analysis Aggregates observations with the same cell types to increase counts per observation, improving Copy Number Variation (CNV) computation. — prepareCountsForCNVAnalysis","text":"seuratObj Seurat object containing data. sampleName character string specifying sample name. referenceVar name metadata column Seurat object contains reference annotations. aggregateByVar Logical. TRUE (default), aggregates observations based referenceVar annotations. aggregFactor Integer. target number counts per observation (default = 15 000). seuratClusterResolution Numeric. resolution used Seurat clustering (default = 0.8). reClusterSeurat Logical. TRUE, re-runs clustering Seurat object.","code":""},{"path":"https://must-bioinfo.github.io/fastCNV/reference/prepareCountsForCNVAnalysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Observations by Cell Type for CNV Analysis Aggregates observations with the same cell types to increase counts per observation, improving Copy Number Variation (CNV) computation. — prepareCountsForCNVAnalysis","text":"Seurat object : new assay called \"AggregatedCounts\" containing modified count matrix. Seurat clusters stored metadata.","code":""}]
